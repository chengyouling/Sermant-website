(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{544:function(t,e,a){"use strict";a.r(e);var s=a(26),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"标签路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签路由"}},[t._v("#")]),t._v(" 标签路由")]),t._v(" "),e("p",[t._v("本文介绍如何使用"),e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/tree/develop/sermant-plugins/sermant-router",target:"_blank",rel:"noopener noreferrer"}},[t._v("标签路由插件"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"功能介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能介绍"}},[t._v("#")]),t._v(" 功能介绍")]),t._v(" "),e("p",[t._v("标签路由插件通过对服务提供者以服务粒度或者全局粒度配置路由规则，通过将某一个或多个服务的提供者划分到同一个分组，约束流量只在指定分组中流转，从而实现流量隔离的目的，可以作为流量染色、蓝绿发布、灰度发布、全链路灰度、同可用区优先调用等场景的能力基础。")]),t._v(" "),e("p",[t._v("标签路由插件通过非侵入的方式实现微服务之间路由规则的配置以及管理。在微服务存在多个版本、多个实例的情况下，标签路由插件可以通过配置路由规则管理服务之间的路由，达到无损升级、应用拨测等业务目的。")]),t._v(" "),e("h2",{attrs:{id:"参数配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数配置"}},[t._v("#")]),t._v(" 参数配置")]),t._v(" "),e("h3",{attrs:{id:"sermant-agent配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sermant-agent配置"}},[t._v("#")]),t._v(" Sermant-agent配置")]),t._v(" "),e("p",[t._v("标签路由插件需要在Sermant-agent中配置服务元数据（版本号、其它元数据），参考"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/sermant-agent.html#sermant-agent使用参数配置"}},[t._v("Sermant-agent使用手册")]),t._v("。微服务实例的标签信息在服务注册时会携带，路由筛选过程需利用下列配置的标签。")],1),t._v(" "),e("ul",[e("li",[e("p",[t._v("service.meta.version: 版本号，用来标识当前微服务实例的版本。")])]),t._v(" "),e("li",[e("p",[t._v("service.meta.parameters: 其它元数据，用来给当前微服务实例打标签，形如k1:v1,k2:v2。")])]),t._v(" "),e("li",[e("p",[t._v("service.meta.zone: 可用区，用来标识当前微服务实例的可用区信息。")])])]),t._v(" "),e("h2",{attrs:{id:"详细路由规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#详细路由规则"}},[t._v("#")]),t._v(" 详细路由规则")]),t._v(" "),e("p",[t._v("标签路由插件基于动态配置中心进行配置发布，配置发布可以参考"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/configuration-center.html#发布配置"}},[t._v("动态配置中心使用手册")]),t._v("。")],1),t._v(" "),e("ul",[e("li",[e("p",[t._v("group")]),t._v(" "),e("p",[t._v("其中group值为"),e("strong",[t._v("app=${service.meta.application}&environment=${service.meta.environment}")]),t._v("，即应用配置。service.meta.application、service.meta.environment的配置请参考"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/sermant-agent.html#sermant-agent使用参数配置"}},[t._v("Sermant-agent使用手册")]),t._v("。")],1)]),t._v(" "),e("li",[e("p",[t._v("key")]),t._v(" "),e("p",[t._v("针对服务粒度的规则，key值为"),e("strong",[t._v("servicecomb.routeRule.${yourServiceName}")]),t._v("，${yourServiceName}为目标应用的微服务名称（即spring.application.name/dubbo.application.name配置的值）。")]),t._v(" "),e("p",[t._v("针对全局粒度的规则，key值为"),e("strong",[t._v("servicecomb.globalRouteRule")]),t._v("。")]),t._v(" "),e("p",[t._v("注意，全局粒度的规则优先级小于服务粒度的规则。")])]),t._v(" "),e("li",[e("p",[t._v("content")]),t._v(" "),e("p",[t._v("content值为具体的路由规则。")])])]),t._v(" "),e("h3",{attrs:{id:"标签路由规则示例及说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签路由规则示例及说明"}},[t._v("#")]),t._v(" 标签路由规则示例及说明")]),t._v(" "),e("p",[t._v("标签路由的规则支持三种类型：基于流量匹配的路由规则、基于标签匹配的路由规则以及流量染色规则。三种类型规则可同时配置生效，也可分别单独配置。")]),t._v(" "),e("p",[e("strong",[t._v("注意")]),t._v("：标签路由规则的格式为yaml")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("基于流量匹配的路由规则")])]),t._v(" "),e("p",[t._v("基于流量匹配的路由规则即通过匹配http/Dubbo的请求头/attachment中的字段来确认路由规则是否需要应用至该请求中。该规则常用于灰度发布等场景。")]),t._v(" "),e("p",[t._v("其规则示例如下：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" routematcher.sermant.io/flow "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kind类型为基于流量匹配的路由规则")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test                  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# description用于描述规则")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 优先级，数字越大，优先级越高，匹配成功后不再匹配低优先级规则")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求匹配规则。0..N个，不配置表示匹配。每条匹配规则只允许存在一个attachments/headers。")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("attachments")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dubbo attachment匹配。如果是http header匹配，需要配置为headers。")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 属性名，使用时修改为具体的key，如果配置了多个key，那么所有的key规则都必须和请求匹配。")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置策略，key的属性值等于1，详细配置策略参考配置策略表")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caseInsensitive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false:不区分大小写（默认）,true:区分大小写。配置为false时，将统一转为大写进行比较")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路由规则")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权重值为20%")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.0.0             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 满足match条件的实例路由到version标签为1.0.0的实例")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权重值为80%")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.0.1             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 满足match条件的实例路由到version标签为1.0.0的实例")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 优先级，数字越大，优先级越高。")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权重值为20%")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 满足match条件的实例路由到group标签为red的实例")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权重值为80%")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green               "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 满足match条件的实例路由到group标签为green的实例")]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述路由规则解释：")]),t._v(" attachments信息中id属性值为1的请求20%会路由到版本号为1.0.0的服务实例，80%会路由到版本号为1.0.1的服务实例。其他请求20%会路由到group标签为red的服务实例，80%会路由到group标签为green的服务实例。")]),t._v(" "),e("p",[e("strong",[t._v("注意：")]),t._v(" 新增配置时，请去掉注释，否则会导致新增失败。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("参数键")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("precedence")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("优先级，数字越大，优先级越高")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("match")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配规则，支持attachments（dubbo应用的attachents参数）/headers（http 请求头）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("exact")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("配置策略， 详细配置策略参考"),e("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E7%AD%96%E7%95%A5%E5%88%97%E8%A1%A8"}},[t._v("配置策略表")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("route")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("路由规则，包括权重配置以及标签信息配置")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("weight")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("权重值")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("tags")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("表示下游的标签信息，满足match条件的实例路由到该标签的下游实例")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("基于标签匹配的路由规则")])]),t._v(" "),e("p",[t._v("基于标签匹配的路由规则即通过匹配消费端实例自身的标签来确认路由规则是否需要应用至该请求中。该规则常用于同标签优先路由等场景。")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" routematcher.sermant.io/tag      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kind类型为基于的标签匹配的路由规则")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# description用于描述规则")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 规则的优先级，数字越大，优先级越高，匹配成功后不再匹配低优先级规则")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                             \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tags固定键，表示需匹配消费端实例自身的标签")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示需要匹配的消费端的标签名为zone，该键按照实际标签名进行配置")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hangzhou'")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置策略，zone的属性值等于hangzhou，详细配置策略参考配置策略表")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caseInsensitive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false:不区分大小写（默认）,true:区分大小写。配置为false时，将统一转为大写进行比较")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CONSUMER_TAG           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该行key表示被调用服务实例的标签名为zone，CONSUMER_TAG为保留字段，表示路由到zone的值相同的服务实例，即被调用服务实例的zone标签需等于'hangzhou'。该配置方式常用于同AZ优先路由等场景")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 规则的优先级，数字越大，优先级越高,匹配成功后不在匹配低优先级规则")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tags为固定键，表示需匹配消费端实例自身的标签")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示需要匹配的消费端的标签名为version，该键按照实际标签名进行配置")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.0.0'")]),t._v("               "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置策略，version的属性值等于1.0.0，详细配置策略参考配置策略表")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caseInsensitive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权重值为20%")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 满足match条件的实例路由到group标签为red的实例")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权重值为80%")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 满足match条件的实例路由到group标签为green的实例")]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述路由规则解释：")]),t._v(" zone标签配置为hangzhou的消费端实例在调用下游服务时，优先调用zone标签也为hangzhou的下游实例。version标签配置为1.0.0的消费端实例在调用下游服务时，请求的20%会路由到group标签为red的服务实例，80%会路由到group标签为green的服务实例。")]),t._v(" "),e("p",[e("strong",[t._v("注意：")]),t._v(" 新增配置时，请去掉注释，否则会导致新增失败。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("参数键")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("precedence")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("优先级，数字越大，优先级越高")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("match")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配规则，只支持tags")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("tags(match中)")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("match中的tags表示需匹配消费端实例自身的标签")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("exact")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("配置策略， 详细配置策略参考"),e("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E7%AD%96%E7%95%A5%E5%88%97%E8%A1%A8"}},[t._v("配置策略表")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("route")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("路由规则，包括权重配置以及标签信息配置")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("weight")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("权重值，若使用"),e("strong",[t._v("CONSUMER_TAG")]),t._v("保留字段可不配置，默认为100%，用于同标签优先的场景。其他场景需配置")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("tags(route中)")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("route中的tags表示下游的标签信息，满足match条件的实例路由到该标签的下游实例")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])])])])])]),t._v(" "),e("p",[t._v("上述基于流量和基于标签匹配的路由规则同时配置时，将先筛选满足基于流量的路由规则的实例，然后再筛选满足基于标签匹配的路由规则的实例，也即取二者交集。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("同标签匹配优先的路由规则")]),t._v("\n同标签优先路由，是指在应用调用服务时，优先调用同标签的服务provider。同标签匹配优先的路由规则是基于标签匹配的路由规则的一个特例。")])]),t._v(" "),e("p",[t._v("其规则示例如下：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" routematcher.sermant.io/tag      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kind类型为基于的标签匹配的路由规则")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sameTag                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# description用于描述规则")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 规则的优先级，数字越大，优先级越高，匹配成功后不再匹配低优先级规则")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                             \n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tags固定键，表示需匹配消费端实例自身的标签")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示需要匹配的消费端的标签名为zone，该键按照实际标签名进行配置")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hangzhou'")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置策略，zone的属性值等于hangzhou，详细配置策略参考配置策略表")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caseInsensitive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false:不区分大小写（默认）,true:区分大小写。配置为false时，将统一转为大写进行比较")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("triggerThreshold")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比例阈值（表示20%），同标签provider可用服务实例数占总可用provider数，大于等于该数字则同标签优先")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minAllInstances")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全部实例最小可用阈值，全部实例最小可用阈值大于全部provider可用实例数，则同标签优先 ")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CONSUMER_TAG           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该行key表示被调用服务实例的标签名为zone，CONSUMER_TAG为保留字段，表示路由到zone的值相同的服务实例，即被调用服务实例的zone标签需等于'hangzhou'。该配置方式用于同AZ优先路由等场景")]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述路由规则解释：")]),t._v(" zone标签配置为hangzhou的消费端实例在调用下游服务时，根据下发的策略，匹配调用下游实例。")]),t._v(" "),e("ol",[e("li",[t._v("若下游无zone标签为hangzhou的实例，则consumer则会在下游的所有实例根据负载均衡策略调用。")]),t._v(" "),e("li",[t._v("若下游总实例数为2时（其中只有一个实例带有zone的标签为hangzhou）， 则优先调用zone标签为hangzhou的下游实例（因为全部实例最小可用阈值大于全部provider可用实例数）。")]),t._v(" "),e("li",[t._v("若下游总实例数为4时（其中只有一个实例带有zone的标签为hangzhou）， 则优先调用zone标签为hangzhou的下游实例（因为同标签provider可用服务实例数占总可用provider数大于比例阈值）。")]),t._v(" "),e("li",[t._v("若下游总实例数为6时（其中只有一个实例带有zone的标签为hangzhou）， 则consumer则会在下游的所有实例根据负载均衡策略调用（因为同标签provider可用服务实例数占总可用provider数小于比例阈值）。")])]),t._v(" "),e("p",[e("strong",[t._v("注意：")]),t._v(" 新增配置时，请去掉注释，否则会导致新增失败。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("参数键")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("precedence")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("优先级，数字越大，优先级越高")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("match")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配规则，只支持tags")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("tags(match中)")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("match中的tags表示需匹配消费端实例自身的标签")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("exact")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("配置策略， 详细配置策略参考"),e("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E7%AD%96%E7%95%A5%E5%88%97%E8%A1%A8"}},[t._v("配置策略表")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("triggerThreshold（policy中）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("比例阈值，若同标签provider可用服务实例数占总可用provider数大于等于比例阈值，则同标签优先")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("minAllInstances（policy中）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("全部实例最小可用阈值，全部实例最小可用阈值大于全部provider可用实例数，则同标签优先")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("route")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("路由规则，包括权重配置以及标签信息配置")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("tags(route中)")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("route中的tags表示下游的标签信息，满足match条件的实例路由到该标签的下游实例")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])])])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("流量染色规则")])]),t._v(" "),e("p",[t._v("流量染色规则，可以将符合一定规则的请求流量进行染色标记，并且将标记跟随着链路一直传递下去。结合流量路由与流量染色能力，可以实现全链路灰度、多环境隔离等场景。")])])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" route.sermant.io/lane "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路由规则为染色规则的类型")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lane  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 规则描述")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 规则的优先级，数字越大，优先级越高，匹配成功后不再匹配低优先级规则")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求匹配规则。0..N个，不配置表示匹配")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" getFoo "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dubbo接口方法名，不配置表示匹配")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.huaweicloud.bar"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dubbo接口名，不配置表示匹配")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dubbo "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 流量入口为dubbo协议，dubbo协议只会匹配attachments/args")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("attachments")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dubbo attachments匹配，不配置表示匹配")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 属性名，使用时修改为具体的属性，如果配置了多个属性，那么所有的属性规则都必须和请求匹配")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置策略，id等于1，详细配置策略参考配置策略表")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caseInsensitive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false:不区分大小写（默认）,true:区分大小写。配置为false时，将统一转为小写进行比较")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dubbo args匹配，不配置表示匹配")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dubbo接口的第0个参数")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .name "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取值类型，dubbo args匹配特有字段，第0个参数为实体，调用getName()方法，详细取值类型参考取值类型表")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置策略，等于foo，详细配置策略参考配置策略表")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tag-inject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 染色标记")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("x-sermant-flag2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gray2 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发起对下游调用时，将该标记传递到http headers/dubbo attachments中")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 染色权重")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" get "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http请求方式，不配置表示匹配")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/foo"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http请求路径，不配置表示匹配")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 流量入口为http协议，http协议只会匹配headers/parameters")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("headers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http headers匹配，不配置表示匹配")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("parameters")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http url parameters匹配，不配置表示匹配")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tag-inject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("x-sermant-flag1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gray1\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("注意：")]),t._v(" 新增配置时，请去掉注释，否则会导致新增失败。")])]),t._v(" "),e("p",[e("strong",[t._v("上述染色规则解释：")]),t._v(" 首先匹配流量入口为dubbo协议的请求，如果请求接口为com.huaweicloud.bar，请求方法为getFoo，attachments中id等于1，对方法中的第0个参数调用getName()方法的返回值等于foo，就对满足条件的100%流量打上【x-sermant-flag2: gray2】的标记，并在调用下游时进行传递，如果不匹配，则匹配流量入口为http协议的请求，如果请求接口为/foo，请求方式为get，headers中id等于1，url parameters中name等于foo，就对满足条件的60%流量打上【x-sermant-flag1: gray1】的标记，并在调用下游时进行传递。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("参数键")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("precedence")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("优先级，数字越大，优先级越高")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("match")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配规则，支持attachments/args/headers/parameters")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("method")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("dubbo接口方法名/http请求方式")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("path")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("dubbo接口名/http请求路径")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("protocol")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("流量入口协议，dubbo/http")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("match存在时必填")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("exact")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("配置策略，详细配置策略参考"),e("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E7%AD%96%E7%95%A5%E5%88%97%E8%A1%A8"}},[t._v("配置策略表")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("type")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("取值类型，详细取值类型参考"),e("a",{attrs:{href:"#%E5%8F%96%E5%80%BC%E7%B1%BB%E5%9E%8B%E8%A1%A8"}},[t._v("取值类型表")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("route")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("染色规则，包括权重配置以及染色标记配置")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("weight")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("权重值")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("tag-inject")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("染色标记")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")])])])]),t._v(" "),e("h3",{attrs:{id:"配置策略列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置策略列表"}},[t._v("#")]),t._v(" 配置策略列表")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("策略名")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("策略值")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("匹配规则")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("精确匹配")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("exact")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("参数值等于配置值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("正则")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("regex")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("参数值匹配正则表达式，由于部分正则表达式（如\\w与\\W等）区分大小写，所以使用正则策略时，请谨慎选择caseInsensitive（是否区分大小写）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("不等于")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("noEqu")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("参数值不等于配置值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("大于等于")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("noLess")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("参数值大于等于配置值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("小于等于")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("noGreater")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("参数值小于等于配置值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("大于")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("greater")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("参数值大于配置值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("小于")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("less")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("参数值小于配置值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("包含")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("in")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("参数值在列表中")])])])]),t._v(" "),e("h3",{attrs:{id:"取值类型表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取值类型表"}},[t._v("#")]),t._v(" 取值类型表")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("取值方式")]),t._v(" "),e("th",[t._v("适用参数类型")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("留空")]),t._v(" "),e("td",[t._v("表示直接取当前参数的值")]),t._v(" "),e("td",[t._v("适用普通参数类型，例如String、int、long等")])]),t._v(" "),e("tr",[e("td",[t._v(".name")]),t._v(" "),e("td",[t._v("表示取参数的name属性，相当于ARG0.getName()")]),t._v(" "),e("td",[t._v("适用于对象类型")])]),t._v(" "),e("tr",[e("td",[t._v(".isEnabled()")]),t._v(" "),e("td",[t._v("表示取参数的enabled属性，相当于ARG0.isEnabled()")]),t._v(" "),e("td",[t._v("适用于对象类型")])]),t._v(" "),e("tr",[e("td",[t._v("[0]")]),t._v(" "),e("td",[t._v("取数组的第一个值，相当于ARG0[0]")]),t._v(" "),e("td",[t._v("适用于普通类型的数组，例如String[]、int[]")])]),t._v(" "),e("tr",[e("td",[t._v(".get(0)")]),t._v(" "),e("td",[t._v("取List的第一个值，相当于ARG0.get(0)")]),t._v(" "),e("td",[t._v("适用于普通类型的列表，例如List<String>、List<Integer>")])]),t._v(" "),e("tr",[e("td",[t._v('.get("key")')]),t._v(" "),e("td",[t._v('获取key对应的值，相当于ARG0.get("key")')]),t._v(" "),e("td",[t._v("适用于普通类型的map，例如Map<String, String>")])])])]),t._v(" "),e("h2",{attrs:{id:"支持版本和限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持版本和限制"}},[t._v("#")]),t._v(" 支持版本和限制")]),t._v(" "),e("p",[t._v("框架支持：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("SpringCloud Edgware.SR2 - 2021.0.0")])]),t._v(" "),e("li",[e("p",[t._v("Dubbo 2.6.x - 2.7.x")])])]),t._v(" "),e("p",[t._v("限制：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("不支持异步调用")])]),t._v(" "),e("li",[e("p",[t._v("http客户端目前只支持Feign、RestTemplate")])])]),t._v(" "),e("h2",{attrs:{id:"操作和结果验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作和结果验证"}},[t._v("#")]),t._v(" 操作和结果验证")]),t._v(" "),e("p",[t._v("下面将演示如何使用标签路由插件，验证使用Sermant动态配置中心（ZooKeeper）为SpringCloud服务配置标签路由场景。")]),t._v(" "),e("h3",{attrs:{id:"准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/releases/download/v1.3.0/sermant-1.3.0.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v(" Sermant\nRelease包（当前版本推荐1.3.0版本）")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant-examples/releases/download/v1.3.0/sermant-examples-router-demo-1.3.0.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v(" Demo二进制产物压缩包")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/apache/servicecomb-service-center",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v("ServiceComb（注册中心），并启动")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://zookeeper.apache.org/releases.html#download",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v("ZooKeeper（动态配置中心），并启动")])]),t._v(" "),e("h3",{attrs:{id:"步骤一-获取demo二进制产物"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤一-获取demo二进制产物"}},[t._v("#")]),t._v(" 步骤一：获取Demo二进制产物")]),t._v(" "),e("p",[t._v("解压Demo二进制产物压缩包，即可得到"),e("code",[t._v("spring-cloud-router-consumer.jar")]),t._v("、"),e("code",[t._v("spring-cloud-router-provider.jar")]),t._v("和"),e("code",[t._v("spring-cloud-router-zuul.jar")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"步骤二-部署应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤二-部署应用"}},[t._v("#")]),t._v(" 步骤二：部署应用")]),t._v(" "),e("p",[t._v("（1）启动zuul网关")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservicecomb_service_enableSpringRegister")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent-x.x.x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-cloud-router-zuul.jar\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mac, linux")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservicecomb_service_enableSpringRegister")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),t._v("/sermant-agent-x.x.x/agent/sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-cloud-router-zuul.jar\n")])])]),e("p",[t._v("（2）启动消费者")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservicecomb_service_enableSpringRegister")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent-x.x.x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-cloud-router-consumer.jar\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mac, linux")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservicecomb_service_enableSpringRegister")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),t._v("/sermant-agent-x.x.x/agent/sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-cloud-router-consumer.jar\n")])])]),e("p",[t._v("（3）启动生产者")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservicecomb_service_enableSpringRegister")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent-x.x.x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-cloud-router-provider.jar\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mac, linux")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservicecomb_service_enableSpringRegister")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),t._v("/sermant-agent-x.x.x/agent/sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-cloud-router-provider.jar\n")])])]),e("p",[t._v("（4）启动标签生产者（版本为1.0.1，标签为group:gray）")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservicecomb_service_enableSpringRegister")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservice_meta_version")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(".1 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservice_meta_parameters")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("group:gray "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dserver.port")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8163")]),t._v(" -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent-x.x.x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-cloud-router-provider.jar\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mac, linux")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservicecomb_service_enableSpringRegister")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservice_meta_version")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(".1 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dservice_meta_parameters")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("group:gray "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dserver.port")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8163")]),t._v(" -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),t._v("/sermant-agent-x.x.x/agent/sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-cloud-router-provider.jar\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("说明：")]),t._v(" ${path}为sermant实际安装路径，x.x.x代表sermant某个版本号。")])]),t._v(" "),e("h3",{attrs:{id:"步骤三-查看服务注册情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤三-查看服务注册情况"}},[t._v("#")]),t._v(" 步骤三：查看服务注册情况")]),t._v(" "),e("p",[t._v("登录"),e("a",{attrs:{href:"http://127.0.0.1:30103/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ServiceComb"),e("OutboundLink")],1),t._v("后台，查看服务是否注册成功。")]),t._v(" "),e("MyImage",{attrs:{src:"/docs-img/router-registry.png"}}),t._v(" "),e("h3",{attrs:{id:"步骤四-发布配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤四-发布配置"}},[t._v("#")]),t._v(" 步骤四：发布配置")]),t._v(" "),e("p",[t._v("配置路由规则，参考"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/configuration-center.html#发布配置"}},[t._v("动态配置中心使用手册")]),t._v("进行配置发布。")],1),t._v(" "),e("p",[t._v("其中key值为"),e("strong",[t._v("servicecomb.routeRule.spring-cloud-router-provider")]),t._v("，group为"),e("strong",[t._v("app=default&environment=")]),t._v("，content为具体的路由规则，如下所示：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" routematcher.sermant.io/flow\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test                  \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("headers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caseInsensitive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gray\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("precedence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("headers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caseInsensitive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.0.1\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述标签路由规则解释：")]),t._v(" 请求头信息中id属性值为1的请求会路由到组名为gray的服务实例，id属性值为2的请求会路由到版本号为1.0.1的服务实例。")]),t._v(" "),e("p",[t._v("利用ZooKeeper提供的命令行工具进行配置发布。")]),t._v(" "),e("p",[t._v("1、在"),e("code",[t._v("${path}/bin/")]),t._v("目录执行以下命令创建节点"),e("code",[t._v("/app=default&environment=")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux mac")]),t._v("\n./zkCli.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\nzkCli.cmd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])])]),e("p",[t._v("2、在"),e("code",[t._v("${path}/bin/")]),t._v("目录执行以下命令创建节点"),e("code",[t._v("/app=default&environment=/servicecomb.routeRule.spring-cloud-router-provider")]),t._v("并设置数据。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux mac")]),t._v("\n./zkCli.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/servicecomb.routeRule.spring-cloud-router-provider "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"---\n- kind: routematcher.sermant.io/flow\n  description: test                  \n  rules: \n    - precedence: 1\n      match:\n        headers:\n          id:\n            exact: '1'\n            caseInsensitive: false\n      route:\n        - tags:\n            group: gray\n          weight: 100\n    - precedence: 2\n      match:\n        headers:\n          id:\n            exact: '2'\n            caseInsensitive: false\n      route:\n        - tags:\n            version: 1.0.1\n          weight: 100\"")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\nzkCli.cmd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/servicecomb.routeRule.spring-cloud-router-provider "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"---\n- kind: routematcher.sermant.io/flow\n  description: test                  \n  rules: \n    - precedence: 1\n      match:\n        headers:\n          id:\n            exact: '1'\n            caseInsensitive: false\n      route:\n        - tags:\n            group: gray\n          weight: 100\n    - precedence: 2\n      match:\n        headers:\n          id:\n            exact: '2'\n            caseInsensitive: false\n      route:\n        - tags:\n            version: 1.0.1\n          weight: 100\"")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("说明："),e("code",[t._v("${path}")]),t._v("为ZooKeeper的安装目录。")])]),t._v(" "),e("h3",{attrs:{id:"验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),e("MyImage",{attrs:{src:"/docs-img/router-result.png"}}),t._v(" "),e("p",[t._v("当启动以上4个应用并正确配置路由规则后，通过http客户端工具访问"),e("code",[t._v("http://127.0.0.1:8170/consumer/hello/rest")]),t._v("，可以发现，当请求头为id: 1或者id: 2时，会路由到版本为1.0.1的provider，当不满足以上条件时，会访问到版本为1.0.0的provider。")])],1)}),[],!1,null,null,null);e.default=n.exports}}]);