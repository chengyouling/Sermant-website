(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{525:function(t,a,e){"use strict";e.r(a);var s=e(26),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"插件开发手册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件开发手册"}},[t._v("#")]),t._v(" 插件开发手册")]),t._v(" "),a("p",[t._v("本文档主要针对"),a("strong",[t._v("Sermant")]),t._v("的"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例模块"),a("OutboundLink")],1),t._v("，介绍插件开发过程中常见的一些场景。")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83"}},[t._v("开发环境")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86"}},[t._v("组成部分")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%A8%A1%E5%9D%97"}},[t._v("插件模块")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%A2%9E%E5%BC%BA%E5%AE%9A%E4%B9%89"}},[t._v("增强定义")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%A2%9E%E5%BC%BA"}},[t._v("原生类增强")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8B%A6%E6%88%AA%E5%99%A8"}},[t._v("拦截器")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE"}},[t._v("插件配置")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1"}},[t._v("插件服务")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E7%AE%80%E5%8D%95%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1"}},[t._v("简单插件服务")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%A4%8D%E6%9D%82%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1"}},[t._v("复杂插件服务")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%97%A5%E5%BF%97%E5%8A%9F%E8%83%BD"}},[t._v("日志功能")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%BF%83%E8%B7%B3%E5%8A%9F%E8%83%BD"}},[t._v("心跳功能")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E9%93%BE%E8%B7%AF%E5%8A%9F%E8%83%BD"}},[t._v("链路功能")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE%E5%8A%9F%E8%83%BD"}},[t._v("动态配置功能")])])])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97"}},[t._v("插件服务模块")])])]),t._v(" "),a("h2",{attrs:{id:"开发环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发环境"}},[t._v("#")]),t._v(" 开发环境")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://gitee.com/openeuler/bishengjdk-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("HuaweiJDK 1.8"),a("OutboundLink")],1),t._v(" / "),a("a",{attrs:{href:"https://github.com/openjdk/jdk",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenJDK 1.8"),a("OutboundLink")],1),t._v(" / "),a("a",{attrs:{href:"https://www.oracle.com/java/technologies/downloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OracleJDK 1.8"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://maven.apache.org/download.cgi",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache Maven 3"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"组成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组成部分"}},[t._v("#")]),t._v(" 组成部分")]),t._v(" "),a("p",[t._v("由"),a("RouterLink",{attrs:{to:"/zh/document/UserGuide/plugin.html"}},[t._v("插件模块介绍")]),t._v("可知，一个"),a("code",[t._v("插件主模块(main)")]),t._v("中可能包含以下5种内容：")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("插件模块(plugin)")]),t._v("，该模块主要用于声明对宿主应用的增强逻辑")]),t._v(" "),a("li",[a("code",[t._v("服务模块(service)")]),t._v("，用于为插件包提供服务实现")]),t._v(" "),a("li",[a("code",[t._v("后端模块(server)")]),t._v("，用于接收插件数据的服务端")]),t._v(" "),a("li",[a("code",[t._v("前端模块(webapp)")]),t._v("，用于对服务端数据作前端展示")]),t._v(" "),a("li",[a("code",[t._v("其他模块(other)")]),t._v("，特殊附加件，一般用作调试")])]),t._v(" "),a("p",[t._v("考虑到后三者随实际业务场景不同有较大变化，因此赋予他们的开发自由度较高，对他们仅有模块目录和输出目录的限制。出于这点考虑，"),a("code",[t._v("示例模块")]),t._v("将不对他们做参考案例。"),a("code",[t._v("示例模块")]),t._v("中包含以下模块：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("template-plugin"),a("OutboundLink")],1),t._v(": 示例插件")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-service",target:"_blank",rel:"noopener noreferrer"}},[t._v("template-service"),a("OutboundLink")],1),t._v(": 示例插件服务")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/demo-application",target:"_blank",rel:"noopener noreferrer"}},[t._v("demo-application"),a("OutboundLink")],1),t._v(": 示例宿主应用")])]),t._v(" "),a("h2",{attrs:{id:"插件模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件模块"}},[t._v("#")]),t._v(" 插件模块")]),t._v(" "),a("p",[t._v("示例插件模块"),a("code",[t._v("template-plugin")]),t._v("中，主要用于向插件开发者展示在插件开发过程中可能遇到的一些场景以及可能使用到的一些功能。")]),t._v(" "),a("p",[t._v("开始之前，必须约定的就是，"),a("code",[t._v("插件模块(plugin)")]),t._v("中，开发者只能使用"),a("em",[t._v("Java")]),t._v("原生API和"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Sermant")]),t._v("核心功能模块"),a("OutboundLink")],1),t._v("中的API，不能依赖或使用任何"),a("code",[t._v("byte-buddy")]),t._v("与"),a("code",[t._v("slf4j")]),t._v("以外的第三方依赖。如果应业务要求，需要使用其他第三方依赖的话，只能在"),a("code",[t._v("插件模块(plugin)")]),t._v("中定义接口，在"),a("code",[t._v("服务模块(service)")]),t._v("中编写实现。更多相关内容详见"),a("RouterLink",{attrs:{to:"/zh/document/UserGuide/plugin.html#添加插件模块"}},[t._v("插件模块介绍")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"增强定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增强定义"}},[t._v("#")]),t._v(" 增强定义")]),t._v(" "),a("p",[a("strong",[t._v("Sermant")]),t._v("的核心能力是对宿主应用做非侵入式的字节码增强，而这些增强规则则是插件化的。在每个"),a("strong",[t._v("Sermant")]),t._v("的"),a("code",[t._v("插件主模块(main)")]),t._v("中，都可以定义一些增强定义，针对宿主应用的某些特定方法进行字节码增强，从而实现某种功能。因此"),a("code",[t._v("插件主模块(main)")]),t._v("如何告知"),a("strong",[t._v("Sermant")]),t._v("该增强哪些类，是一个重要的课题。")]),t._v(" "),a("p",[t._v("插件的增强定义需要实现"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/declarer/PluginDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PluginDeclarer"),a("OutboundLink")],1),t._v("接口，其中包含两个接口方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("getClassMatcher")]),t._v("方法用于获取被增强类的匹配器"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/matcher/ClassMatcher.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ClassMatcher"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("getInterceptDeclarers")]),t._v("方法用于获取被增强类的拦截点方法，以及嵌入其中的拦截器，他们封装于方法拦截点"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/declarer/InterceptDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("InterceptDeclarer"),a("OutboundLink")],1),t._v("中。")]),t._v(" "),a("li",[a("code",[t._v("getSuperTpeDecarers")]),t._v("方法用于获取插件的超类声明"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/declarer/SuperTypeDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("SuperTypeDeclarer"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("对匹配器 "),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/matcher/ClassMatcher.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ClassMatcher"),a("OutboundLink")],1),t._v("，在核心模块中提供了两种类型的匹配器：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/matcher/ClassTypeMatcher.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ClassTypeMatcher"),a("OutboundLink")],1),t._v("(类的类型匹配器)")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("完全通过名称匹配，也是最常见的定位方式，通过以下方法获取：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameEquals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${class reference}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${class reference}")]),t._v("为被增强类的全限定名。")])]),t._v(" "),a("li",[a("p",[t._v("通过名称匹配多个类，属于"),a("code",[t._v("nameEquals")]),t._v("的复数版，可通过以下方法获取：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameContains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${class reference array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${class reference array}")]),t._v("为被增强类的全限定名可变数组。")])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/matcher/ClassFuzzyMatcher.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ClassFuzzyMatcher"),a("OutboundLink")],1),t._v("（类的模糊匹配器）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("通过全限定名前缀定位到被增强类，可通过以下方法获取：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("namePrefixedWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${prefix}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${prefix}")]),t._v("为全限定名前缀。")])]),t._v(" "),a("li",[a("p",[t._v("通过全限定名后缀定位到被增强类，可以通过一下方法获取：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameSuffixedWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${suffix}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${suffix}")]),t._v("为全限定名后缀。")])]),t._v(" "),a("li",[a("p",[t._v("通过全限定名内缀定位到被增强类，可以通过以下方法获取：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameinfixedWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${infix}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${infix}")]),t._v("为全限定名内缀。")])]),t._v(" "),a("li",[a("p",[t._v("通过正则表达式匹配全限定名定位到被增强类，可以通过以下方法获取：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameMatches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${pattern}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${pattern}")]),t._v("为正则表达式。")])]),t._v(" "),a("li",[a("p",[t._v("通过注解定位到被该注解修饰的类，可通过以下方法获取：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAnnotationWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${annotation reference array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${annotation reference array}")]),t._v("为注解的全限定名可变数组。")])]),t._v(" "),a("li",[a("p",[t._v("通过超类定位到该类的子类，可通过以下方法获取：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isExtendedFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${super class array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${super class array}")]),t._v("为超类可变数组。考虑到Java的继承规则，该数组只能有一个"),a("code",[t._v("Class")]),t._v("，其余必须全为"),a("code",[t._v("Interface")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("匹配的逻辑操作，匹配器全部不匹配时为真：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("not")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${class matcher array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${class matcher array}")]),t._v("为匹配器可变长数组")])]),t._v(" "),a("li",[a("p",[t._v("匹配的逻辑操作，匹配器全部都匹配时为真：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("and")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${class matcher array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${class matcher array}")]),t._v("为匹配器可变长数组")])]),t._v(" "),a("li",[a("p",[t._v("匹配的逻辑操作，匹配器其中一个匹配时为真：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("or")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${class matcher array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${class matcher array}")]),t._v("为匹配器可变长数组")])])]),t._v(" "),a("p",[t._v("对于方法拦截点"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/matcher/MethodMatcher.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("MethodMatcher"),a("OutboundLink")],1),t._v("，提供了多种匹配方法：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("全数匹配：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("名称匹配：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameEquals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${method name}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${method name}")]),t._v("为方法名称。")])]),t._v(" "),a("li",[a("p",[t._v("匹配静态方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isStaticMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("匹配构造函数：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isConstructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("匹配多个方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameContains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${method name array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${method name array}")]),t._v("为方法名称数组。")])]),t._v(" "),a("li",[a("p",[t._v("根据方法名称前缀匹配：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("namePrefixedWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${method name prefix}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${method name prefix}")]),t._v("为方法名称前缀。")])]),t._v(" "),a("li",[a("p",[t._v("根据方法名称后缀匹配：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameSuffixedWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${method name suffix}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${method name suffix}")]),t._v("为方法名称后缀。")])]),t._v(" "),a("li",[a("p",[t._v("根据方法名称内缀匹配：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameinfixedWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${method name infix}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${method name infix}")]),t._v("为方法名称内缀。")])]),t._v(" "),a("li",[a("p",[t._v("根据正则表达式匹配：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nameMatches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${pattern}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${pattern}")]),t._v("为正则表达式。")])]),t._v(" "),a("li",[a("p",[t._v("匹配被传入注解修饰的方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAnnotatedWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${annotations array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${annotations array}")]),t._v("为注解集。")])]),t._v(" "),a("li",[a("p",[t._v("匹配指定入参数量的方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("paramCountEquals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${param count}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${param count}")]),t._v("为入参数量。")])]),t._v(" "),a("li",[a("p",[t._v("匹配指定入参类型的方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("paramTypeEquals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${param type array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${param type array}")]),t._v("为入参类型集。")])]),t._v(" "),a("li",[a("p",[t._v("匹配指定返回值类型的方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resultTypeEquals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${result type}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${result type}")]),t._v("返回值类型。")])]),t._v(" "),a("li",[a("p",[t._v("逻辑操作，方法匹配器集全不匹配时则结果为真")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("not")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${element matcher array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${element matcher array}")]),t._v("为方法匹配器集。")])]),t._v(" "),a("li",[a("p",[t._v("逻辑操作，方法匹配器集全匹配时则结果为真")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("and")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${element matcher array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${element matcher array}")]),t._v("为方法匹配器集。")])]),t._v(" "),a("li",[a("p",[t._v("逻辑操作，方法匹配器集其中一个匹配时则结果为真")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("or")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${element matcher array}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("${element matcher array}")]),t._v("为方法匹配器集。")])])]),t._v(" "),a("p",[t._v("更多方法匹配方式可以参考"),a("a",{attrs:{href:"https://javadoc.io/doc/net.bytebuddy/byte-buddy/latest/net/bytebuddy/matcher/ElementMatchers.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("byte-buddy"),a("OutboundLink")],1),t._v("中含"),a("code",[t._v("MethodDescription")]),t._v("泛型的方法。")]),t._v(" "),a("p",[t._v("开发到最后，不要忘记添加"),a("code",[t._v("PluginDeclarer")]),t._v("接口的"),a("em",[t._v("SPI")]),t._v("配置文件：")]),t._v(" "),a("ul",[a("li",[t._v("在资源目录"),a("code",[t._v("resources")]),t._v("下添加"),a("code",[t._v("META-INF/services")]),t._v("文件夹。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("META-INF/services")]),t._v("中添加"),a("code",[t._v("io.sermant.core.plugin.agent.declarer.PluginDeclarer")]),t._v("配置文件。")]),t._v(" "),a("li",[t._v("在上述文件中，以换行为分隔，键入插件包中所有的增强定义"),a("code",[t._v("PluginDeclarer")]),t._v("实现。")])]),t._v(" "),a("p",[a("strong",[t._v("Sermant")]),t._v("的"),a("code",[t._v("示例模块")]),t._v("中包含以下"),a("code",[t._v("PluginDeclarer")]),t._v("接口的实现示例：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/declarer/DemoAnnotationDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoAnnotationDeclarer"),a("OutboundLink")],1),t._v(": 通过注解定位被修饰类的普通增强定义")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/declarer/DemoNameDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoNameDeclarer"),a("OutboundLink")],1),t._v(": 通过名称定位到被增强类的普通增强定义")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/declarer/DemoSuperTypeDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoSuperTypeDeclarer"),a("OutboundLink")],1),t._v(": 通过超类定位到被增强子类的普通增强定义")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/declarer/DemoBootstrapDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoBootstrapDeclarer"),a("OutboundLink")],1),t._v(": 对启动类加载器进行增强的定义，详见"),a("a",{attrs:{href:"#%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%A2%9E%E5%BC%BA"}},[t._v("原生类增强")]),t._v("一节")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/declarer/DemoTraceDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoTraceDeclarer"),a("OutboundLink")],1),t._v(": 对示例应用使用链路功能的增强定义，详见"),a("a",{attrs:{href:"#%E9%93%BE%E8%B7%AF%E5%8A%9F%E8%83%BD"}},[t._v("链路功能")]),t._v("一节")])]),t._v(" "),a("p",[t._v("在各插件开发者在编写插件增强定义的时候，可以以以上示例为参考，开发符合自身需要的增强定义。")]),t._v(" "),a("h4",{attrs:{id:"原生类增强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生类增强"}},[t._v("#")]),t._v(" 原生类增强")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("java.lang.Thread")]),t._v("等"),a("em",[t._v("Java")]),t._v("原生类，他们由启动类加载器"),a("code",[t._v("BootStrapClassLoader")]),t._v("加载，对他们进行增强的话，主要会面临两个困难：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原生类被启动类加载器加载，那么如果对他们做增强的话，就需要将被增强后的字节码重新覆盖回启动类加载器中。考虑到增强后的嵌入代码主要是在"),a("strong",[t._v("拦截器")]),t._v("中编写的，而这些内容主要由系统类加载器"),a("code",[t._v("AppClassLoader")]),t._v("加载，启动类加载器无法访问。得益于"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/template",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Advice模板类")]),a("OutboundLink")],1),t._v("中使用反射调用拦截器的方法，使得原生类在增强时，编写的拦截器不受拘束。")])]),t._v(" "),a("li",[a("p",[t._v("鉴于"),a("em",[t._v("Java")]),t._v("重定义"),a("em",[t._v("Class")]),t._v("的限制，我们无法修改这些原生类的元信息，那么就无法使用byte-buddy委派的方式对他们进行增强(原理是添加委派属性和静态代码块)。所幸我们可以使用"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/template",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Advice模板类")]),a("OutboundLink")],1),t._v("配合"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/transformer/BootstrapTransformer.java",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("byte-buddy advice")]),a("OutboundLink")],1),t._v("技术进行增强，而现在"),a("strong",[t._v("核心模块")]),t._v("就是这么做的。")])])]),t._v(" "),a("p",[t._v("结合上述内容，其实增强原生类和增强普通类在增强定义和拦截器编写上没有什么区别，但是还是希望插件开发者尽量少地对原生类进行增强，原因有三：")]),t._v(" "),a("ul",[a("li",[t._v("对原生类的增强往往是发散的，对他们增强很可能会对其他插件或宿主功能造成影响。")]),t._v(" "),a("li",[t._v("对原生类的增强逻辑，将使用反射的方式调用系统类加载器中的拦截器方法。由于"),a("em",[t._v("Java")]),t._v("重定义"),a("em",[t._v("Class")]),t._v("的限制，每次调用被增强方法的时候，都会进行反射处理的逻辑，这将极大限制该方法的"),a("em",[t._v("TPS")]),t._v("上限。")]),t._v(" "),a("li",[t._v("对原生类的增强过程中，涉及到使用"),a("strong",[t._v("Advice模板类")]),t._v("生成动态拦截类。对于每个被增强的原生类方法，都会动态生成一个，他们将被系统类加载器加载。如果不加限制的增强原生类，加载动态类也会成为启动过程中不小的负担。")])]),t._v(" "),a("p",[t._v("综上，"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Sermant")]),t._v("核心功能模块"),a("OutboundLink")],1),t._v("中提供对"),a("em",[t._v("Java")]),t._v("原生类增强的能力，但是，不建议不加限制地对他们进行增强，如果有多个增强点可选，优先考虑增强普通类。")]),t._v(" "),a("p",[a("strong",[t._v("Sermant")]),t._v("的"),a("code",[t._v("示例模块")]),t._v("中，"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/declarer/DemoBootstrapDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoBootstrapDeclarer"),a("OutboundLink")],1),t._v("对"),a("code",[t._v("java.lang.Thread")]),t._v("做了增强，可以启动示例应用"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/demo-application/src/main/java/com/huawei/example/demo/DemoApplication.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoApplication"),a("OutboundLink")],1),t._v("观察"),a("code",[t._v("java.lang.Thread")]),t._v("是否被正常增强。")]),t._v(" "),a("h3",{attrs:{id:"拦截器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拦截器"}},[t._v("#")]),t._v(" 拦截器")]),t._v(" "),a("p",[t._v("新版插件的开发中在拦截器层面不再对静态方法、构造函数和实例方法作区分，降低插件开发的复杂度。\n对于方法拦截点"),a("code",[t._v("MethodInterceptPoint")]),t._v("，有静态方法、构造函数和实例方法三种获取类型，对应的拦截器也有三种类型：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/agent/interceptor/Interceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("interceptor"),a("OutboundLink")],1),t._v(": 拦截器接口，其中包含三个方法：\n"),a("ul",[a("li",[a("code",[t._v("before")]),t._v("，前置方法，该方法在拦截点之前执行。ExecuteContext参数为插件执行的上下文，里面封装拦截器运作所需的所有参数，通过skip方法可跳过主要流程，并设置最终方法结果，注意，增强构造函数时，不能跳过主要流程。")]),t._v(" "),a("li",[a("code",[t._v("after")]),t._v("，后置方法，无论被拦截方法是否正常执行，最后都会进入后置方法中。后置方法可以通过返回值覆盖被拦截方法的返回值，因此这里开发者需要注意不要轻易返回null。")]),t._v(" "),a("li",[a("code",[t._v("onThrow")]),t._v("，处理异常的方法，当被拦截方法执行异常时触发。这里处理异常并不会影响异常的正常抛出。")])])])]),t._v(" "),a("p",[a("strong",[t._v("Sermant")]),t._v("的"),a("code",[t._v("示例模块")]),t._v("中包含以下拦截器示例：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/interceptor/DemoStaticInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoStaticInterceptor"),a("OutboundLink")],1),t._v(": 普通的静态方法拦截器")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/interceptor/DemoConstInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConstInterceptor"),a("OutboundLink")],1),t._v(": 普通的构造函数拦截器")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/interceptor/DemoMemberInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoMemberInterceptor"),a("OutboundLink")],1),t._v(": 普通的实例方法拦截器")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/interceptor/DemoConfigInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConfigInterceptor"),a("OutboundLink")],1),t._v(": 插件配置使用示例拦截器，详见"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE"}},[t._v("插件配置")]),t._v("一节")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/interceptor/DemoServiceInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoServiceInterceptor"),a("OutboundLink")],1),t._v(": 插件服务使用示例拦截器，详见"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1"}},[t._v("插件服务")]),t._v("一节")])]),t._v(" "),a("p",[t._v("在各插件开发者在编写自定义拦截器的时候，可以以以上示例为参考，开发满足自身功能需要的拦截器。")]),t._v(" "),a("h3",{attrs:{id:"插件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件配置"}},[t._v("#")]),t._v(" 插件配置")]),t._v(" "),a("p",[a("strong",[t._v("插件配置")]),t._v("指的是在插件包和插件服务包使用的配置系统，主要由三部分组成：")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/config/PluginConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PluginConfig"),a("OutboundLink")],1),t._v("插件配置接口: 所有普通的插件配置都要实现该接口。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/config/PluginConfigManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PluginConfigManager"),a("OutboundLink")],1),t._v("插件配置管理器: 提供获取插件配置"),a("code",[t._v("PluginConfig")]),t._v("的接口：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ${plugin config class}为插件配置的Class")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PluginConfigManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPluginConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("plugin config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("PluginConfigManager")]),t._v("是统一配置管理器"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/config/ConfigManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConfigManager"),a("OutboundLink")],1),t._v("的特例，插件端可以直接使用后者的接口获取插件配置和统一配置：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ${base config class}为统一配置或插件配置的Class")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("base config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("从"),a("strong",[t._v("Sermant")]),t._v("的"),a("code",[t._v("示例模块")]),t._v("的插件配置文件"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/config/config.yaml",target:"_blank",rel:"noopener noreferrer"}},[t._v("config.yaml"),a("OutboundLink")],1),t._v("可以看出，该配置文件是一个"),a("em",[t._v("yaml")]),t._v("文件，一个"),a("code",[t._v("插件主模块(main)")]),t._v("的"),a("code",[t._v("插件模块(plugin)")]),t._v("和"),a("code",[t._v("服务模块(service)")]),t._v("中的插件配置对应的配置信息都封装在这唯一的"),a("code",[t._v("config.yaml")]),t._v("中。")]),t._v(" "),a("p",[t._v("相较于传统的"),a("em",[t._v("yaml")]),t._v("格式配置文件对应一个"),a("em",[t._v("Java Pojo")]),t._v("对象，这里的"),a("code",[t._v("config.yaml")]),t._v("可以封装多个"),a("em",[t._v("Java Pojo")]),t._v("，他们由全限定名或别名进行区分，形成类似"),a("em",[t._v("Map")]),t._v("的结构，其中"),a("code",[t._v("demo.test")]),t._v("键对应的是"),a("strong",[t._v("示例插件包")]),t._v("中的"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/config/DemoConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConfig"),a("OutboundLink")],1),t._v("对象，"),a("code",[t._v("com.huawei.example.demo.config.DemoServiceConfig")]),t._v("键对应的是"),a("strong",[t._v("示例插件服务包")]),t._v("中的"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-service/src/main/java/com/huawei/example/demo/config/DemoServiceConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoServiceConfig"),a("OutboundLink")],1),t._v("对象。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/config/DemoConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConfig"),a("OutboundLink")],1),t._v("相较于"),a("code",[t._v("DemoServiceConfig")]),t._v("，前者被"),a("a",{attrs:{href:"../../sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/config/common/ConfigTypeKey.java"}},[t._v("ConfigTypeKey")]),t._v("注解修饰，因此设定了"),a("code",[t._v("demo.test")]),t._v("的别名。如果没有被"),a("code",[t._v("ConfigTypeKey")]),t._v("注解修饰，则直接使用全限定名做索引。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/config/DemoConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConfig"),a("OutboundLink")],1),t._v("中的"),a("code",[t._v("map")]),t._v("属性被"),a("a",{attrs:{href:"../../sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/config/common/ConfigFieldKey.java"}},[t._v("ConfigFieldKey")]),t._v("注解修饰，将其属性名修改为"),a("code",[t._v("str2DemoSimplePojoMap")]),t._v("。不过需要注意的是，使用该注解的"),a("strong",[t._v("Java Pojo")]),t._v("如果被数组、"),a("em",[t._v("List")]),t._v("或"),a("em",[t._v("Map")]),t._v("包装了一层，该注解的语义无效，因此，目前该注解只能用于修饰当前"),a("strong",[t._v("插件配置类")]),t._v("或直接使用的"),a("strong",[t._v("Java Pojo")]),t._v("。")]),t._v(" "),a("p",[t._v("从"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/config/DemoConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConfig"),a("OutboundLink")],1),t._v("中可以看出，插件配置现在支持的数据类型包括：")]),t._v(" "),a("ul",[a("li",[t._v("布尔、数值类的基础类型及包装类型")]),t._v(" "),a("li",[t._v("字符串类型")]),t._v(" "),a("li",[t._v("枚举类型")]),t._v(" "),a("li",[t._v("复杂对象类型")]),t._v(" "),a("li",[t._v("上述类型构成的数组")]),t._v(" "),a("li",[t._v("前四种类型构成的"),a("em",[t._v("List")])]),t._v(" "),a("li",[t._v("前四种类型构成的"),a("em",[t._v("Map")])])]),t._v(" "),a("p",[a("em",[t._v("yaml")]),t._v("格式配置文件目前还有一些其他规则：")]),t._v(" "),a("ul",[a("li",[t._v("对于数组、List和Map中涉及的复杂对象，不支持"),a("code",[t._v("ConfigFieldKey")]),t._v("修正属性名")]),t._v(" "),a("li",[t._v("对于数组、List和Map中的字符串，不支持"),a("code",[t._v("${}")]),t._v("转换，"),a("strong",[t._v("插件配置类")]),t._v("的字符串属性和复杂类型属性内部的字符串属性支持")]),t._v(" "),a("li",[t._v("仅在字符串做"),a("code",[t._v("${}")]),t._v("转换时使用入参，不支持使用入参直接设置属性值")]),t._v(" "),a("li",[t._v("配置类的字段名一般为小驼峰命名，可用"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/config/common/ConfigFieldKey.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConfigFieldKey"),a("OutboundLink")],1),t._v("注解修饰为中划线风格定义别名。添加注解后，在"),a("em",[t._v("yaml")]),t._v("中即可用中划线或小驼峰皆可解析，参考"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/config/DemoConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConfig"),a("OutboundLink")],1),t._v("的"),a("code",[t._v("intField")]),t._v("属性")]),t._v(" "),a("li",[t._v("配置生效的优先级为：启动参数 > 环境变量 > 系统变量(-D参数) > "),a("em",[t._v("yaml")]),t._v("文件配置")]),t._v(" "),a("li",[t._v("配置类的属性在按照生效的优先级获取参考值(启动参数，环境变量和系统变量(-D参数))时，小驼峰和中划线都可以被分割成单词来进行查找匹配。例如对于"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/config/DemoConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConfig"),a("OutboundLink")],1),t._v("的"),a("code",[t._v("intField")]),t._v("属性，key将被转化为如下多种形式按顺序来查找：\n"),a("ul",[a("li",[t._v("demo.test.intField")]),t._v(" "),a("li",[t._v("demo_test_intField")]),t._v(" "),a("li",[t._v("demo-test-intField")]),t._v(" "),a("li",[t._v("DEMO.TEST.INTFIELD")]),t._v(" "),a("li",[t._v("DEMO_TEST_INTFIELD")]),t._v(" "),a("li",[t._v("DEMO-TEST-INTFIELD")]),t._v(" "),a("li",[t._v("demo.test.intfield")]),t._v(" "),a("li",[t._v("demo_test_intfield")]),t._v(" "),a("li",[t._v("demo-test-intfield")]),t._v(" "),a("li",[t._v("demo.test.int.field")]),t._v(" "),a("li",[t._v("demo_test_int_field")]),t._v(" "),a("li",[t._v("demo-test-int-field")]),t._v(" "),a("li",[t._v("DEMO.TEST.INT.FIELD")]),t._v(" "),a("li",[t._v("DEMO_TEST_INT_FIELD")]),t._v(" "),a("li",[t._v("DEMO-TEST-INT-FIELD")])])]),t._v(" "),a("li",[t._v("若"),a("em",[t._v("yaml")]),t._v("配置中基本数据类型/数组/map/list/set(不支持包含复杂对象)的key未定义，将按照配置生效的优先级：启动参数 > 环境变量 > 系统变量(-D参数) 来获取参考值。从上述数据源获取参考值时，需注意：\n"),a("ul",[a("li",[t._v("数组/list/set需配置为"),a("code",[t._v("yaml")]),t._v("字符串格式，例如：DEMO_TEST_LIST_NAME=[elem1,elem2]")]),t._v(" "),a("li",[t._v("map需配置为"),a("code",[t._v("yaml")]),t._v("字符串格式，例如：DEMO_TEST_MAP_NAME={key1: value1, key2: value2}")])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/config/DemoConfig.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoConfig"),a("OutboundLink")],1),t._v("中已经包含了大部分可能的配置场景，插件开发者可以参考并编写符合自身业务需求的插件配置类。")]),t._v(" "),a("p",[t._v("最后，不要忘记添加插件配置的"),a("em",[t._v("SPI")]),t._v("配置文件：")]),t._v(" "),a("ul",[a("li",[t._v("在资源目录"),a("code",[t._v("resources")]),t._v("下添加"),a("code",[t._v("META-INF/services")]),t._v("文件夹。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("META-INF/services")]),t._v("中添加"),a("code",[t._v("io.sermant.core.plugin.config.PluginConfig")]),t._v("配置文件。")]),t._v(" "),a("li",[t._v("在上述文件中，以换行为分隔，键入插件包中所有的插件配置"),a("code",[t._v("PluginConfig")]),t._v("实现。")])]),t._v(" "),a("h3",{attrs:{id:"插件服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件服务"}},[t._v("#")]),t._v(" 插件服务")]),t._v(" "),a("p",[a("strong",[t._v("插件服务")]),t._v("指的是在插件包和插件服务包使用的服务系统，主要由两部分组成：")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/service/PluginService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PluginService"),a("OutboundLink")],1),t._v("插件服务接口。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/service/PluginServiceManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PluginServiceManager"),a("OutboundLink")],1),t._v("插件服务管理器，其中提供获取"),a("code",[t._v("PluginService")]),t._v("的接口：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ${plugin service class}为插件服务的Class")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PluginServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPluginService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("plugin service "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("PluginServiceManager")]),t._v("其实只是"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/service/ServiceManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ServiceManager"),a("OutboundLink")],1),t._v("的一个特例，可以直接使用后者的接口获取核心服务和插件服务：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ${base service class}为核心服务或插件服务的Class")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("base service "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("从"),a("RouterLink",{attrs:{to:"/zh/document/UserGuide/plugin.html#添加插件模块"}},[t._v("插件模块介绍")]),t._v("可知，插件有"),a("strong",[t._v("简单插件")]),t._v("和"),a("strong",[t._v("复杂插件")]),t._v("之分，这主要和他们所定义服务的复杂程度有关：")],1),t._v(" "),a("ul",[a("li",[a("strong",[t._v("简单插件")]),t._v("中定义的服务只能使用"),a("em",[t._v("Java")]),t._v("原生"),a("em",[t._v("API")]),t._v("、"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Sermant")]),t._v("核心功能模块"),a("OutboundLink")],1),t._v("中自研的"),a("em",[t._v("API")]),t._v("("),a("code",[t._v("com.huawei")]),t._v("开头)，以及"),a("code",[t._v("byte-buddy")]),t._v("和"),a("code",[t._v("slf4j")]),t._v("的"),a("em",[t._v("API")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("复杂插件")]),t._v("中的服务除了能使用上述"),a("em",[t._v("API")]),t._v("，还有权使用其他第三方依赖的"),a("em",[t._v("API")]),t._v("。这些服务需要分离出"),a("strong",[t._v("插件服务接口")]),t._v("和"),a("strong",[t._v("插件服务实现")]),t._v("：前者编写于"),a("code",[t._v("插件模块(plugin)")]),t._v("中，供拦截器调用；后者编写于"),a("code",[t._v("服务模块(service)")]),t._v("中，由自定义"),a("em",[t._v("ClassLoader")]),t._v("加载，以实现类加载器级别的依赖隔离。")])])])]),t._v(" "),a("h4",{attrs:{id:"简单插件服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单插件服务"}},[t._v("#")]),t._v(" 简单插件服务")]),t._v(" "),a("p",[t._v("对于"),a("strong",[t._v("简单插件服务")]),t._v("，实现"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/service/PluginService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PluginService"),a("OutboundLink")],1),t._v("接口即可，如"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/service/DemoSimpleService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoSimpleService"),a("OutboundLink")],1),t._v("示例，在实现"),a("code",[t._v("start")]),t._v("方法和"),a("code",[t._v("stop")]),t._v("方法的基础上，可以添加其他所需的方法，如"),a("code",[t._v("activeFunc")]),t._v("方法，通过以下代码获得"),a("code",[t._v("DemoSimpleService")]),t._v("的示例并调用"),a("code",[t._v("activeFunc")]),t._v("方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoSimpleService")]),t._v(" simpleService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PluginServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPluginService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoSimpleService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsimpleService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("activeFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("对于"),a("strong",[t._v("简单插件服务")]),t._v("来说，唯一的限制就是只能使用"),a("em",[t._v("Java")]),t._v("原生"),a("em",[t._v("API")]),t._v("，"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Sermant")]),t._v("核心功能模块"),a("OutboundLink")],1),t._v("中自研的"),a("em",[t._v("API")]),t._v("("),a("code",[t._v("com.huawei")]),t._v("开头)，以及"),a("code",[t._v("byte-buddy")]),t._v("和"),a("code",[t._v("slf4j")]),t._v("的"),a("em",[t._v("API")]),t._v("。")]),t._v(" "),a("p",[t._v("插件开发者可以参照"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/service/DemoSimpleService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoSimpleService"),a("OutboundLink")],1),t._v("，按需编写自身业务所需的"),a("strong",[t._v("简单插件服务")]),t._v("。")]),t._v(" "),a("p",[t._v("最后不要忘记添加"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/plugin/service/PluginService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PluginService"),a("OutboundLink")],1),t._v("的"),a("em",[t._v("SPI")]),t._v("配置文件：")]),t._v(" "),a("ul",[a("li",[t._v("在资源目录"),a("code",[t._v("resources")]),t._v("下添加"),a("code",[t._v("META-INF/services")]),t._v("文件夹。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("META-INF/services")]),t._v("中添加"),a("code",[t._v("io.sermant.core.plugin.service.PluginService")]),t._v("配置文件。")]),t._v(" "),a("li",[t._v("在上述文件中，以换行为分隔，键入插件包中所有的插件服务"),a("code",[t._v("PluginService")]),t._v("实现。")])]),t._v(" "),a("p",[t._v("特别需要注意的是，不要尝试在"),a("code",[t._v("PluginService")]),t._v("的"),a("code",[t._v("start")]),t._v("方法中获取其他"),a("strong",[t._v("插件服务")]),t._v("的实例，由于"),a("strong",[t._v("插件服务")]),t._v("仍在初始化当中，可能无法正确获取这些"),a("strong",[t._v("插件服务")]),t._v("实例。")]),t._v(" "),a("h4",{attrs:{id:"复杂插件服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂插件服务"}},[t._v("#")]),t._v(" 复杂插件服务")]),t._v(" "),a("p",[a("strong",[t._v("复杂插件服务")]),t._v("比起"),a("strong",[t._v("简单插件服务")]),t._v("，只有两点区别：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("复杂插件服务")]),t._v("在"),a("code",[t._v("插件模块(plugin)")]),t._v("中编写接口，在"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97"}},[a("code",[t._v("服务模块(service)")])]),t._v("中编写实现，而"),a("strong",[t._v("简单插件服务")]),t._v("不需要编写接口，直接在"),a("code",[t._v("插件模块(plugin)")]),t._v("中实现。")]),t._v(" "),a("li",[a("strong",[t._v("复杂插件服务")]),t._v("的实现可以按需使用任意第三方依赖。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/service/DemoComplexService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoComplexService"),a("OutboundLink")],1),t._v("是"),a("strong",[t._v("复杂插件服务")]),t._v("示例接口，其中可以按需添加接口，如"),a("code",[t._v("activeFunc")]),t._v("方法，"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-service/src/main/java/com/huawei/example/demo/service/DemoComplexServiceImpl.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoComplexServiceImpl"),a("OutboundLink")],1),t._v("是对应的实现。我们可以通过以下代码调用"),a("code",[t._v("activeFunc")]),t._v("方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoComplexService")]),t._v(" complexService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PluginServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPluginService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoComplexService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncomplexService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("activeFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("添加"),a("em",[t._v("SPI")]),t._v("配置及其他注意事项和"),a("strong",[t._v("简单插件服务")]),t._v("没有区别，这里不做赘述。开发者可以参照"),a("code",[t._v("DemoComplexService")]),t._v("接口和"),a("code",[t._v("DemoComplexServiceImpl")]),t._v("实现编写符合自身业务要求的"),a("strong",[t._v("复杂插件服务")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"日志功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志功能"}},[t._v("#")]),t._v(" 日志功能")]),t._v(" "),a("p",[t._v("考虑到依赖隔离的问题，"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Sermant")]),t._v("核心功能模块"),a("OutboundLink")],1),t._v("提供给"),a("code",[t._v("插件模块(plugin)")]),t._v("和"),a("code",[t._v("服务模块(service)")]),t._v("使用的日志只能是"),a("strong",[t._v("jul")]),t._v("日志，通过以下方法获取"),a("strong",[t._v("jul")]),t._v("日志实例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sermant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LoggerFactory")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger")]),t._v(" logger"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LoggerFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLogger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("插件开发者如果需要输出日志信息，可以参考"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/common/DemoLogger.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoLogger"),a("OutboundLink")],1),t._v("示例开发。")]),t._v(" "),a("h4",{attrs:{id:"心跳功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#心跳功能"}},[t._v("#")]),t._v(" 心跳功能")]),t._v(" "),a("p",[t._v("心跳功能是"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Sermant")]),t._v("核心功能模块"),a("OutboundLink")],1),t._v("的核心服务之一，通过以下代码获取实例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartbeatService")]),t._v(" heartbeatService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeartbeatService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("心跳功能在初始化的时候就会启动执行，定期将每个插件的名称、版本等信息发送至后端服务器。目前来说，插件的心跳上报的信息包括：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("hostname")]),t._v("：发送客户端的主机名")]),t._v(" "),a("li",[a("code",[t._v("ip")]),t._v("：发送客户端的IP地址")]),t._v(" "),a("li",[a("code",[t._v("app")]),t._v("：应用名称，即启动参数中的"),a("code",[t._v("appName")])]),t._v(" "),a("li",[a("code",[t._v("appType")]),t._v("：应用类型，即启动参数中的"),a("code",[t._v("appType")])]),t._v(" "),a("li",[a("code",[t._v("heartbeatVersion")]),t._v("：上一次心跳发送时间")]),t._v(" "),a("li",[a("code",[t._v("lastHeartbeat")]),t._v("：上一次心跳发送时间")]),t._v(" "),a("li",[a("code",[t._v("version")]),t._v("：核心包的版本，即核心包"),a("code",[t._v("manifest")]),t._v("文件的"),a("code",[t._v("Sermant-Version")]),t._v("值")]),t._v(" "),a("li",[a("code",[t._v("pluginName")]),t._v("：插件名称，通过插件设定文件确定")]),t._v(" "),a("li",[a("code",[t._v("pluginVersion")]),t._v("：插件版本号，取插件jar包中"),a("code",[t._v("manifest")]),t._v("文件的"),a("code",[t._v("Sermant-Plugin-Version")]),t._v("值")])]),t._v(" "),a("p",[t._v("如果希望在插件上报的数据中增加额外的内容，可以调用以下api：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过自定义ExtInfoProvider提供额外内容集合")]),t._v("\nheartbeatService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExtInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExtInfoProvider")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExtInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("插件开发者如果需要往心跳功能发送的数据包中增加额外内容，可以参考"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/service/DemoHeartBeatService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoHeartBeatService"),a("OutboundLink")],1),t._v("示例开发。")]),t._v(" "),a("p",[t._v("更多心跳服务相关内容可参见"),a("RouterLink",{attrs:{to:"/zh/document/developer-guide/service_heartbeat-zh.html"}},[t._v("心跳服务介绍")]),t._v("。")],1),t._v(" "),a("h4",{attrs:{id:"链路功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链路功能"}},[t._v("#")]),t._v(" 链路功能")]),t._v(" "),a("p",[a("strong",[t._v("链路功能")]),t._v("是一个继消息发送能力建立的一个上层功能，该功能简单来说就是从宿主端的调用链之间嵌入以下逻辑：")]),t._v(" "),a("ul",[a("li",[t._v("在发送数据的时候，在数据包中插入链路所需的"),a("code",[t._v("TraceId")]),t._v("和"),a("code",[t._v("SpanId")]),t._v("，前者是请求在分布式系统中的整个链路视图，后者代表整个链路中不同服务内部的视图。")]),t._v(" "),a("li",[t._v("在接收数据的时候，解析数据包中嵌入的链路相关内容，形成链路的一环提交到后台服务器中，逐渐形成调用链。")])]),t._v(" "),a("p",[t._v("在示例宿主的"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/demo-application/src/main/java/com/huawei/example/demo/service/DemoTraceService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoTraceService"),a("OutboundLink")],1),t._v("中，"),a("code",[t._v("counsumer")]),t._v("方法和"),a("code",[t._v("provider")]),t._v("方法模仿服务器接收数据并处理发送数据的流程，而数据包则假定存在一个"),a("code",[t._v("ThreadLocal")]),t._v("中，直到下一次调用"),a("code",[t._v("provider")]),t._v("方法接收数据。")]),t._v(" "),a("p",[t._v("基于上述示例宿主，我们编写"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/declarer/DemoTraceDeclarer.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoTraceDeclarer"),a("OutboundLink")],1),t._v("增强定义\n，对"),a("code",[t._v("DemoTraceService")]),t._v("的"),a("code",[t._v("provider")]),t._v("方法和"),a("code",[t._v("consumer")]),t._v("方法分别使用使用"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/interceptor/DemoTraceProviderInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoTraceProviderInterceptor"),a("OutboundLink")],1),t._v("和"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/interceptor/DemoTraceConsumerInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoTraceConsumerInterceptor"),a("OutboundLink")],1),t._v("拦截器进行增强。")]),t._v(" "),a("ul",[a("li",[t._v("对于发送"),a("code",[t._v("provider")]),t._v("方法，做如下增强："),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingService")]),t._v(" tracingService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingRequest")]),t._v(" request "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRawCls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExtractService")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" extractService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tracingRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" carrier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          tracingRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTraceId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("carrier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TRACE_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          tracingRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setParentSpanId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("carrier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PARENT_SPAN_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          tracingRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSpanIdPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("carrier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPAN_ID_PREFIX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      tracingService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onProviderSpanStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" extractService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArguments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      tracingService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onSpanFinally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onThrow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      tracingService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onSpanError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getThrowable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("对于"),a("code",[t._v("consumer")]),t._v("方法，做如下增强："),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingService")]),t._v(" tracingService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingRequest")]),t._v(" request "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRawCls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InjectService")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" injectService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("spanEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" carrier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          carrier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TRACE_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" spanEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTraceId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          carrier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PARENT_SPAN_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" spanEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpanId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          carrier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TracingHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPAN_ID_PREFIX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" spanEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNextSpanIdPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      tracingService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onConsumerSpanStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" injectService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      tracingService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onSpanFinally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onThrow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      tracingService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onSpanError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getThrowable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("strong",[t._v("Sermant")]),t._v("的"),a("code",[t._v("示例模块")]),t._v("这里只是简单地抛砖引玉。\n如果插件开发者需要使用链路功能，参照"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/interceptor/DemoTraceNormalInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoTraceNormalInterceptor"),a("OutboundLink")],1),t._v("自行开发。")])]),t._v(" "),a("h3",{attrs:{id:"动态配置功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态配置功能"}},[t._v("#")]),t._v(" 动态配置功能")]),t._v(" "),a("p",[t._v("动态配置功能是"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Sermant")]),t._v("核心功能模块"),a("OutboundLink")],1),t._v("的核心服务之一，通过以下代码获取实例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DynamicConfigService")]),t._v(" service "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DynamicConfigService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("调用以下方法注册一个监听器：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ${group}为用户分组，${key}为监听的键，对zookeeper来说，监听的路径相当于: / + ${group} + ${key}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不传${group}，则会默认设置为统一配置中dynamicconfig.default_group对应的值")]),t._v("\nservice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConfigListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${key}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${group}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DynamicConfigListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigChangedEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注册监听器之后，当服务器对应节点发生创建、删除、修改、添加子节点等事件时，就会触发"),a("code",[t._v("process")]),t._v("函数。")]),t._v(" "),a("p",[t._v("插件开发者如果需要使用动态配置，可以参考"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/sermant-template/template/template-plugin/src/main/java/com/huawei/example/demo/service/DemoDynaConfService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoDynaConfService"),a("OutboundLink")],1),t._v("示例开发。")]),t._v(" "),a("p",[t._v("更多动态配置服务相关内容可参见"),a("RouterLink",{attrs:{to:"/zh/document/developer-guide/service_dynamicconfig-zh.html"}},[t._v("动态配置服务介绍")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"插件服务模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件服务模块"}},[t._v("#")]),t._v(" 插件服务模块")]),t._v(" "),a("p",[a("strong",[t._v("插件服务模块")]),t._v("较"),a("strong",[t._v("插件模块")]),t._v("相比：")]),t._v(" "),a("ul",[a("li",[t._v("只能编写"),a("strong",[t._v("插件配置")]),t._v("和"),a("strong",[t._v("插件服务接口")]),t._v("的实现，不能编写"),a("strong",[t._v("增强定义")]),t._v("、"),a("strong",[t._v("拦截器")]),t._v("和"),a("strong",[t._v("插件服务接口")])]),t._v(" "),a("li",[t._v("允许自由添加需要的第三方依赖，打包的时候，需要提供输出依赖的方式，可以用"),a("code",[t._v("shade")]),t._v("插件或"),a("code",[t._v("assembly")]),t._v("插件打带依赖"),a("em",[t._v("jar")]),t._v("包，也可以直接使用"),a("code",[t._v("dependency")]),t._v("插件输出依赖包。")])]),t._v(" "),a("p",[t._v("注意：由于"),a("code",[t._v("byte-buddy")]),t._v("和"),a("code",[t._v("slf4j")]),t._v("包的限制，还是建议直接使用"),a("code",[t._v("shade")]),t._v("插件打包，相关的规则已在"),a("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-plugins",target:"_blank",rel:"noopener noreferrer"}},[t._v("插件根模块"),a("OutboundLink")],1),t._v("中定义完毕，直接引入插件即可，详见"),a("RouterLink",{attrs:{to:"/zh/document/UserGuide/plugin.html#添加插件服务模块"}},[t._v("插件模块介绍")]),t._v("。")],1),t._v(" "),a("p",[a("strong",[t._v("插件服务模块")]),t._v("中通常涉及"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE"}},[t._v("插件配置")]),t._v("和"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1"}},[t._v("插件服务")]),t._v("的编写，其中"),a("strong",[t._v("插件服务")]),t._v("主要是指"),a("a",{attrs:{href:"#%E5%A4%8D%E6%9D%82%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1"}},[t._v("复杂插件服务")]),t._v("的实现。以上相关内容前文已有介绍，这里不做赘述。")])])}),[],!1,null,null,null);a.default=n.exports}}]);