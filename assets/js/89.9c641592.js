(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{535:function(t,v,_){"use strict";_.r(v);var e=_(26),r=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"性能基准测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能基准测试"}},[t._v("#")]),t._v(" 性能基准测试")]),t._v(" "),v("p",[t._v("本文档包含Sermant性能的基准测试结果(持续更新)。")]),t._v(" "),v("h2",{attrs:{id:"标签路由插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#标签路由插件"}},[t._v("#")]),t._v(" 标签路由插件")]),t._v(" "),v("p",[t._v("我们使用 "),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sermant-examples"),v("OutboundLink")],1),t._v(" 仓库中的作为基准应用进行性能测试，以说明Sermant的"),v("RouterLink",{attrs:{to:"/zh/document/plugin/router.html"}},[t._v("service-router标签路由插件")]),t._v("挂载至应用上的性能表现。")],1),t._v(" "),v("h3",{attrs:{id:"部署场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署场景"}},[t._v("#")]),t._v(" 部署场景")]),t._v(" "),v("p",[t._v("本次测试我们将上述仓库中的 "),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/grace-demo/spring-grace-nacos-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud应用"),v("OutboundLink")],1),t._v(" 部署至容器环境中:")]),t._v(" "),v("ul",[v("li",[t._v("nacos-rest-consumer，部署1个Pod，挂载Sermant的service-router插件。该服务作为入口服务，根据动态配置中心下发的标签规则来筛选下游实例进行调用。本次测试将监控该服务的性能表现。")]),t._v(" "),v("li",[t._v("nacos-rest-provider，部署3个Pod，挂载Sermant的service-router插件，并且不同的Pod配置的不同的标签以供服务消费者进行筛选。该服务作为nacos-rest-consumer的服务提供者。")]),t._v(" "),v("li",[t._v("nacos-rest-data，部署1个Pod，不挂载Sermant，该服务作为作为nacos-rest-provider的服务提供者。")])]),t._v(" "),v("p",[t._v("该部署场景中，服务调用关系如下：")]),t._v(" "),v("MyImage",{attrs:{src:"/docs-img/test_router.jpg"}}),t._v(" "),v("p",[t._v("我们向动态配置中心下发合法的路由插件规则，使得nacos-rest-consumer的请求按标签路由规则发送到指定的nacos-rest-provider实例。")]),t._v(" "),v("p",[t._v("另外，本次测试的基线对照组，所有应用均不挂载Sermant。")]),t._v(" "),v("h3",{attrs:{id:"部署环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署环境"}},[t._v("#")]),t._v(" 部署环境")]),t._v(" "),v("p",[t._v("本次测试使用华为云容器引擎CCE进行应用部署，K8s集群的ECS节点数量为2个，规格如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("规格：通用计算型｜16vCPUs｜32GiB｜s6.4xlarge.2\nDocker Version: v18.09.9\nKubernetes Version: v1.23\n")])])]),v("p",[t._v("K8s中所有应用Pod的规格一致，均为"),v("code",[t._v("4vCPUs|8GiB")]),t._v("。")]),t._v(" "),v("p",[t._v("Sermant版本："),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/tag/v1.1.0",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("Release v1.1.0")]),v("OutboundLink")],1)]),t._v(" "),v("h3",{attrs:{id:"测试结果"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试结果"}},[t._v("#")]),t._v(" 测试结果")]),t._v(" "),v("p",[t._v("使用Jmeter对nacos-rest-consumer进行并发调用，分别模拟50用户、目标1000tps，以及100用户、目标2000tps。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("并发线程数")]),t._v(" "),v("th",[t._v("CPU(基线/挂载Sermant/差异)")]),t._v(" "),v("th",[t._v("Heap内存")]),t._v(" "),v("th",[t._v("Metaspace内存")]),t._v(" "),v("th",[t._v("P90(ms)")]),t._v(" "),v("th",[t._v("P95(ms)")]),t._v(" "),v("th",[t._v("Throughout(/s)")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("50")]),t._v(" "),v("td",[t._v("13.8% / 16.9% / 3.1%")]),t._v(" "),v("td",[t._v("92.7M / 122.5M /  29.8M")]),t._v(" "),v("td",[t._v("56.8M / 66.6M / 9.8M")]),t._v(" "),v("td",[t._v("34ms / 34ms / 0")]),t._v(" "),v("td",[t._v("35ms / 36ms / 2.8%")]),t._v(" "),v("td",[t._v("992.8 / 986.4 / -0.6%")])]),t._v(" "),v("tr",[v("td",[t._v("100")]),t._v(" "),v("td",[t._v("26.9% / 32.5% / 5.6%")]),t._v(" "),v("td",[t._v("150.4M / 183.5M / 33.1M")]),t._v(" "),v("td",[t._v("56.6M / 66.8M / 10.2M")]),t._v(" "),v("td",[t._v("34ms / 35ms / 2.9%")]),t._v(" "),v("td",[t._v("35ms / 38ms / 7.9%")]),t._v(" "),v("td",[t._v("1980.4 / 1965.4 / -0.7%")])])])]),t._v(" "),v("h3",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("Sermant标签路由插件对于宿主应用的CPU占用率、内存占用、吞吐量以及时延影响较低，额外消耗的资源主要用于请求过程中路由规则的匹配和实例的筛选。")]),t._v(" "),v("h2",{attrs:{id:"离群实例摘除插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#离群实例摘除插件"}},[t._v("#")]),t._v(" 离群实例摘除插件")]),t._v(" "),v("p",[t._v("我们使用 "),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sermant-examples"),v("OutboundLink")],1),t._v(" 仓库中的作为基准应用进行性能测试，以说明Sermant的"),v("RouterLink",{attrs:{to:"/zh/document/plugin/removal.html"}},[t._v("service-removal离群实例摘除插件")]),t._v("挂载至应用上的性能表现。")],1),t._v(" "),v("h3",{attrs:{id:"部署场景-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署场景-2"}},[t._v("#")]),t._v(" 部署场景")]),t._v(" "),v("p",[t._v("本次测试我们将上述仓库中的 "),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/grace-demo/spring-grace-nacos-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud应用"),v("OutboundLink")],1),t._v(" 部署至容器环境中:")]),t._v(" "),v("ul",[v("li",[t._v("nacos-rest-consumer，部署1个Pod，挂载Sermant的service-removal插件。该服务作为入口服务，离群实例摘除插件挂载于该插件上，会对异常的nacos-rest-provider实例做摘除操作，避免请求调用至状态异常的实例。本次测试将监控该服务的性能表现。")]),t._v(" "),v("li",[t._v("nacos-rest-provider，部署3个Pod，不挂载Sermant。该服务作为nacos-rest-consumer的服务提供者。")]),t._v(" "),v("li",[t._v("nacos-rest-data，部署1个Pod，不挂载Sermant，该服务作为作为nacos-rest-provider的服务提供者。")])]),t._v(" "),v("p",[t._v("该部署场景中，服务调用关系如下：")]),t._v(" "),v("MyImage",{attrs:{src:"/docs-img/test_removal.jpg"}}),t._v(" "),v("p",[t._v("我们在离群实例摘除插件中配置合法的实例摘除规则，使得nacos-rest-consumer将状态异常的实例从服务发现列表中删除。")]),t._v(" "),v("p",[t._v("另外，本次测试的基线对照组，所有应用均不挂载Sermant。")]),t._v(" "),v("h3",{attrs:{id:"部署环境-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署环境-2"}},[t._v("#")]),t._v(" 部署环境")]),t._v(" "),v("p",[t._v("本次测试使用华为云容器引擎CCE进行应用部署，K8s集群的ECS节点数量为2个，规格如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("规格：通用计算型｜16vCPUs｜32GiB｜s6.4xlarge.2\nDocker Version: v18.09.9\nKubernetes Version: v1.23\n")])])]),v("p",[t._v("K8s中所有应用Pod的规格一致，均为"),v("code",[t._v("4vCPUs|8GiB")]),t._v("。")]),t._v(" "),v("p",[t._v("Sermant版本："),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/tag/v1.1.0",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("Release v1.1.0")]),v("OutboundLink")],1)]),t._v(" "),v("h3",{attrs:{id:"测试结果-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试结果-2"}},[t._v("#")]),t._v(" 测试结果")]),t._v(" "),v("p",[t._v("使用Jmeter对nacos-rest-consumer进行并发调用，分别模拟50用户、目标1000tps，以及100用户、目标2000tps。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("并发线程数")]),t._v(" "),v("th",[t._v("CPU(基线/挂载Sermant/差异)")]),t._v(" "),v("th",[t._v("Heap内存")]),t._v(" "),v("th",[t._v("Metaspace内存")]),t._v(" "),v("th",[t._v("P90(ms)")]),t._v(" "),v("th",[t._v("P95(ms)")]),t._v(" "),v("th",[t._v("Throughout(/s)")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("50")]),t._v(" "),v("td",[t._v("13.8% / 14.3% / 0.5%")]),t._v(" "),v("td",[t._v("92.7M / 105.7M /  13.0M")]),t._v(" "),v("td",[t._v("56.8M / 65.5M / 8.7M")]),t._v(" "),v("td",[t._v("34ms / 34ms / 0")]),t._v(" "),v("td",[t._v("35ms / 34ms / -2.9%")]),t._v(" "),v("td",[t._v("992.8 / 993.5 / 0.1%")])]),t._v(" "),v("tr",[v("td",[t._v("100")]),t._v(" "),v("td",[t._v("26.9% / 28.2% / 0.3%")]),t._v(" "),v("td",[t._v("150.4M /  167M / 16.6M")]),t._v(" "),v("td",[t._v("56.6M / 65.5M / 8.9M")]),t._v(" "),v("td",[t._v("34ms / 34ms / 0")]),t._v(" "),v("td",[t._v("34ms / 34ms / 0")]),t._v(" "),v("td",[t._v("1980.4 / 1984.5 /  0.1%")])])])]),t._v(" "),v("h3",{attrs:{id:"总结-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("Sermant离群实例摘除插件对于宿主应用的CPU占用率、内存占用、吞吐量以及时延影响非常轻微，额外的资源消耗主要用于请求成功率的统计以及离群实例的摘除过程，对请求过程基本无影响。")]),t._v(" "),v("h2",{attrs:{id:"流量标签透传插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流量标签透传插件"}},[t._v("#")]),t._v(" 流量标签透传插件")]),t._v(" "),v("p",[t._v("本次测试分为两个部分，分别是Http/RPC的测试和消息队列的测试。其中Http/RPC部分使用包含HttpClient、Okhttp、Dubbo、Grpc等客户端的测试微服务进行压测，消息队列部分使用包含Kafka、RocketMQ的测试微服务进行Benchmark测试，以说明Sermant的"),v("RouterLink",{attrs:{to:"/zh/document/plugin/tag-transmission.html"}},[t._v("流量标签透传插件")]),t._v("挂载至被测微服务上的性能表现。")],1),t._v(" "),v("h3",{attrs:{id:"部署场景-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署场景-3"}},[t._v("#")]),t._v(" 部署场景")]),t._v(" "),v("p",[t._v("本次测试的分为对照组和实验组，对照组所有被测微服务均不挂载Sermant，实验组的被测微服务均挂载Sermant。")]),t._v(" "),v("p",[t._v("Http场景中分别部署Http客户端以及服务端的测试微服务，RPC场景分别部署消费端和服务提供端的测试微服务。使用Jmeter对Http客户端和RPC的消费端进行压测。分别记录对照组和实验组的压测指标数据。")]),t._v(" "),v("p",[t._v("消息队列场景中，生产环节测试由Kafka或RocketMQ的生产者生产相同数量的消息，分别记录对照组和实验组的耗时。消费环节的测试，需先在Kafka和RocketMq中生产足够多的消息以供测试，然后分别记录对照组和实验组消费相同数量消息的耗时。")]),t._v(" "),v("h3",{attrs:{id:"部署环境-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署环境-3"}},[t._v("#")]),t._v(" 部署环境")]),t._v(" "),v("p",[t._v("本次测试使用华为云容器引擎CCE进行应用部署，K8s集群的ECS节点数量为2个，规格如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("规格：通用计算型｜16vCPUs｜32GiB｜s6.4xlarge.2\nDocker Version: v18.09.9\nKubernetes Version: v1.23\n")])])]),v("p",[t._v("K8s中所有应用Pod的规格一致，均为"),v("code",[t._v("4vCPUs|8GiB")]),t._v("。")]),t._v(" "),v("p",[t._v("Sermant版本："),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/tag/v1.2.0",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("Release v1.2.0")]),v("OutboundLink")],1)]),t._v(" "),v("h3",{attrs:{id:"http-rpc测试结果"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-rpc测试结果"}},[t._v("#")]),t._v(" Http/RPC测试结果")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[t._v("被测组件")])]),t._v(" "),v("th",[t._v("达到最大TPS时长（无Sermant/有Sermant/ 差异）")]),t._v(" "),v("th",[t._v("最大TPS（无Sermant/有Sermant/ 差异）")]),t._v(" "),v("th",[t._v("平均TPS（无Sermant/有Sermant/ 差异）")]),t._v(" "),v("th",[t._v("CPU占用率增加")]),t._v(" "),v("th",[t._v("Heap内存增加")]),t._v(" "),v("th",[t._v("metaspace增加")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("HttpClient(3.1)")]),t._v(" "),v("td",[t._v("16s / 17s / +1s")]),t._v(" "),v("td",[t._v("540 / 538 / -0.4%")]),t._v(" "),v("td",[t._v("525 / 524 / -0.2%")]),t._v(" "),v("td",[t._v("1.57%")]),t._v(" "),v("td",[t._v("15M")]),t._v(" "),v("td",[t._v("16M")])]),t._v(" "),v("tr",[v("td",[t._v("HttpClient(4.5.13)")]),t._v(" "),v("td",[t._v("18s / 18s / 0")]),t._v(" "),v("td",[t._v("489 / 486 / -0.6%")]),t._v(" "),v("td",[t._v("474 / 475 / +0.2%")]),t._v(" "),v("td",[t._v("0.58%")]),t._v(" "),v("td",[t._v("13M")]),t._v(" "),v("td",[t._v("17M")])]),t._v(" "),v("tr",[v("td",[t._v("Okhttp(2.7.5)")]),t._v(" "),v("td",[t._v("20s / 21s / +1s")]),t._v(" "),v("td",[t._v("616 / 617 / +0.2%")]),t._v(" "),v("td",[t._v("610 / 608 / -0.3%")]),t._v(" "),v("td",[t._v("2.96%")]),t._v(" "),v("td",[t._v("15M")]),t._v(" "),v("td",[t._v("15M")])]),t._v(" "),v("tr",[v("td",[t._v("Jdkhttp(jdk8)")]),t._v(" "),v("td",[t._v("19s / 19s / 0")]),t._v(" "),v("td",[t._v("615 / 614 / -0.2%")]),t._v(" "),v("td",[t._v("609 / 605 / -0.7%")]),t._v(" "),v("td",[t._v("3.06%")]),t._v(" "),v("td",[t._v("19M")]),t._v(" "),v("td",[t._v("16M")])]),t._v(" "),v("tr",[v("td",[t._v("Dubbo(2.7.5)")]),t._v(" "),v("td",[t._v("12s / 13s / +1s")]),t._v(" "),v("td",[t._v("600 / 599 / -0.2%")]),t._v(" "),v("td",[t._v("583 / 585 / +0.3%")]),t._v(" "),v("td",[t._v("5.10%")]),t._v(" "),v("td",[t._v("18M")]),t._v(" "),v("td",[t._v("15M")])]),t._v(" "),v("tr",[v("td",[t._v("Grpc(1.52.1)")]),t._v(" "),v("td",[t._v("18s / 19s / +1s")]),t._v(" "),v("td",[t._v("622 / 620 / -0.3%")]),t._v(" "),v("td",[t._v("608 / 607 / -0.2%")]),t._v(" "),v("td",[t._v("3.21%")]),t._v(" "),v("td",[t._v("14M")]),t._v(" "),v("td",[t._v("15M")])]),t._v(" "),v("tr",[v("td",[t._v("Sofarpc(5.10.0)")]),t._v(" "),v("td",[t._v("20s / 22s / +2s")]),t._v(" "),v("td",[t._v("604 / 600 / -0.7%")]),t._v(" "),v("td",[t._v("587 / 586 / -0.2%")]),t._v(" "),v("td",[t._v("2.92%")]),t._v(" "),v("td",[t._v("18M")]),t._v(" "),v("td",[t._v("15M")])]),t._v(" "),v("tr",[v("td",[t._v("Servicecomb(2.8.3)")]),t._v(" "),v("td",[t._v("25s / 23s / -2s")]),t._v(" "),v("td",[t._v("611 / 614 / +0.5%")]),t._v(" "),v("td",[t._v("599 / 600 / +0.2%")]),t._v(" "),v("td",[t._v("4.07%")]),t._v(" "),v("td",[t._v("17M")]),t._v(" "),v("td",[t._v("14M")])])])]),t._v(" "),v("h3",{attrs:{id:"消息队列测试结果"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#消息队列测试结果"}},[t._v("#")]),t._v(" 消息队列测试结果")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[t._v("组件")])]),t._v(" "),v("th",[v("strong",[t._v("处理耗时增加")])])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Kafka(2.7.0) 生产者")]),t._v(" "),v("td",[t._v("生产每百万条消息3s")])]),t._v(" "),v("tr",[v("td",[t._v("Kafka(2.7.0) 消费者")]),t._v(" "),v("td",[t._v("消费每百万条消息1s")])]),t._v(" "),v("tr",[v("td",[t._v("RocketMQ(4.8.0) 生产者")]),t._v(" "),v("td",[t._v("生产每十万条消息1s")])]),t._v(" "),v("tr",[v("td",[t._v("RocketMQ(4.8.0) 消费者")]),t._v(" "),v("td",[t._v("消费每十万条消息1s")])])])]),t._v(" "),v("h3",{attrs:{id:"总结-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("Http/RPC测试中，对达到最大TPS时长、最大TPS、平均TPS、CPU占用率增加、metaspace增加等数据指标做了记录。可以发现Sermant流量标签透传插件的对TPS的影响小于1%，CPU占用率的损耗基本在5%以下，其中Dubbo稍高是因为插件中的反射过程导致的。另外Sermant在压测时对内存占用的增加量也较少。")]),t._v(" "),v("p",[t._v("消息队列与Http、RPC测试方式不同，本次测试主要通过生产或消费固定量的消息的时间消耗的增加量来衡量性能损耗，挂载Sermant流量标签透传插件时，Kafka生产每百万条消息时间增加3s， Kafka消费每百万条消息时间增加1s；RocketMQ生产每十万条消息时间增加1s，RocketMQ消费每十万条消息时间增加1s。表明Sermant流量标签透传插件对二者的性能损耗较低。")]),t._v(" "),v("h2",{attrs:{id:"消息队列禁止消费插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#消息队列禁止消费插件"}},[t._v("#")]),t._v(" 消息队列禁止消费插件")]),t._v(" "),v("p",[t._v("消息队列禁止消费插件实现了类似于开关的功能，对微服务的TPS等指标无影响，因此本次测试主要针对内存的影响来进行，以说明Sermant的"),v("RouterLink",{attrs:{to:"/zh/document/faq/plugin/mq-consume-prohibition.html"}},[t._v("消息队列禁止消费插件")]),t._v("挂载至被测微服务的性能表现。")],1),t._v(" "),v("h3",{attrs:{id:"部署场景-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署场景-4"}},[t._v("#")]),t._v(" 部署场景")]),t._v(" "),v("p",[t._v("本次测试的分为对照组和实验组，对照组所有被测微服务均不挂载Sermant，实验组的被测微服务均挂载Sermant。")]),t._v(" "),v("p",[t._v("针对Kafka和RocketMQ的场景分别进行测试，被测微服务中的消费者均订阅消息队列的Topic进行轮询消费，实验组中Sermant消息队列禁止消费的开关关闭，使用ZooKeeper作为动态配置中心，测试对照组和实验组的内存占用差异。")]),t._v(" "),v("h3",{attrs:{id:"部署环境-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署环境-4"}},[t._v("#")]),t._v(" 部署环境")]),t._v(" "),v("p",[t._v("本次测试使用华为云容器引擎CCE进行应用部署，K8s集群的ECS节点数量为2个，规格如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("规格：通用计算型｜16vCPUs｜32GiB｜s6.4xlarge.2\nDocker Version: v18.09.9\nKubernetes Version: v1.23\n")])])]),v("p",[t._v("K8s中所有应用Pod的规格一致，均为"),v("code",[t._v("4vCPUs|8GiB")]),t._v("。")]),t._v(" "),v("p",[t._v("Sermant版本："),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/tag/v1.3.0",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("Release v1.3.0")]),v("OutboundLink")],1)]),t._v(" "),v("h3",{attrs:{id:"测试结果-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试结果-3"}},[t._v("#")]),t._v(" 测试结果")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("测试场景")]),t._v(" "),v("th",[t._v("内存总增加量")]),t._v(" "),v("th",[t._v("Heap内存增加量")]),t._v(" "),v("th",[t._v("堆外内存增加量")]),t._v(" "),v("th",[t._v("Class增加量")]),t._v(" "),v("th",[t._v("线程增加量")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Kafka(2.7.0)")]),t._v(" "),v("td",[t._v("19.6M")]),t._v(" "),v("td",[t._v("1.6M")]),t._v(" "),v("td",[t._v("18M")]),t._v(" "),v("td",[t._v("2055")]),t._v(" "),v("td",[t._v("3")])]),t._v(" "),v("tr",[v("td",[t._v("RocketMQ-push(5.0.0)")]),t._v(" "),v("td",[t._v("22.2M")]),t._v(" "),v("td",[t._v("2.2M")]),t._v(" "),v("td",[t._v("20M")]),t._v(" "),v("td",[t._v("2258")]),t._v(" "),v("td",[t._v("3")])]),t._v(" "),v("tr",[v("td",[t._v("RocketMQ-pull(5.0.0)")]),t._v(" "),v("td",[t._v("21.7M")]),t._v(" "),v("td",[t._v("2.4M")]),t._v(" "),v("td",[t._v("19M")]),t._v(" "),v("td",[t._v("2262")]),t._v(" "),v("td",[t._v("4")])])])]),t._v(" "),v("h3",{attrs:{id:"总结-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-4"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("测试结果表明Sermant消息队列禁止消费插件对内存的占用20M左右，影响较小。另外挂载Sermant后Class增加量为2000～2200左右，线程的增加量3～4个，主要来自于Sermant框架的logback线程以及ZooKeeper动态配置监听的EventThread和SendThread线程，其中RocketMQ-pull场景额外增加1个重平衡线程。")]),t._v(" "),v("h2",{attrs:{id:"数据库禁写插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库禁写插件"}},[t._v("#")]),t._v(" 数据库禁写插件")]),t._v(" "),v("p",[t._v("本次测试分为对照组和实验组，对照组所有被测微服务均不挂载Sermant，实验组的被测微服务均挂载Sermant。\n测试的数据库分别为MySQL、MongoDB、PostgreSQL和OpenGauss，测试场景为测试微服务查询数据库数据和插入数据库数据。\n使用Jmeter对测试微服务进行压测，微服务启动时挂载async-profiler，分别记录对照组和实验组的压测指标数据。")]),t._v(" "),v("h3",{attrs:{id:"部署环境-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署环境-5"}},[t._v("#")]),t._v(" 部署环境")]),t._v(" "),v("p",[t._v("本次测试使用华为云容器引擎CCE进行应用部署，K8s集群的ECS节点数量为3个，规格如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("规格：通用计算型｜16vCPUs｜32GiB｜s6.4xlarge.2\nDocker Version: v18.09.9\nKubernetes Version: v1.20.2\n")])])]),v("p",[t._v("K8s中所有应用Pod的规格一致，均为"),v("code",[t._v("4vCPUs|8GiB")]),t._v("。")]),t._v(" "),v("p",[t._v("Sermant版本："),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/tag/v1.4.0",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("Release v1.4.0")]),v("OutboundLink")],1)]),t._v(" "),v("h3",{attrs:{id:"测试结果-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试结果-4"}},[t._v("#")]),t._v(" 测试结果")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[t._v("被测数据库和场景")])]),t._v(" "),v("th",[t._v("达到最大TPS时长（无Sermant/有Sermant/ 差异）")]),t._v(" "),v("th",[t._v("最大TPS（无Sermant/有Sermant/ 差异）")]),t._v(" "),v("th",[t._v("平均TPS（无Sermant/有Sermant/ 差异）")]),t._v(" "),v("th",[t._v("CPU占用率增加")]),t._v(" "),v("th",[t._v("总内存增加")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("MySQL(查询场景)")]),t._v(" "),v("td",[t._v("2s / 5s / +3s")]),t._v(" "),v("td",[t._v("972/ 955.2 / -1.72%")]),t._v(" "),v("td",[t._v("917.4 / 899.2 / -1.98%")]),t._v(" "),v("td",[t._v("1.56%")]),t._v(" "),v("td",[t._v("24M")])]),t._v(" "),v("tr",[v("td",[t._v("MySQL(插入场景)")]),t._v(" "),v("td",[t._v("2s / 3s / +1s")]),t._v(" "),v("td",[t._v("119.1 / 939.7 / +689%")]),t._v(" "),v("td",[t._v("108.7 / 886.9 / +716%")]),t._v(" "),v("td",[t._v("3.26%")]),t._v(" "),v("td",[t._v("24M")])]),t._v(" "),v("tr",[v("td",[t._v("MongoDB(查询场景)")]),t._v(" "),v("td",[t._v("21s / 23s / +2s")]),t._v(" "),v("td",[t._v("1499.2 / 1500.8 / +0.1%")]),t._v(" "),v("td",[t._v("1453.3 / 1452.3 / -0.06%")]),t._v(" "),v("td",[t._v("0.06%")]),t._v(" "),v("td",[t._v("23M")])]),t._v(" "),v("tr",[v("td",[t._v("MongoDB(插入场景)")]),t._v(" "),v("td",[t._v("19s / 22s / +3s")]),t._v(" "),v("td",[t._v("1054.8 / 1468.4 / +39.2%")]),t._v(" "),v("td",[t._v("1018.9 / 1433.7 / +40.7%")]),t._v(" "),v("td",[t._v("0.98%")]),t._v(" "),v("td",[t._v("23M")])]),t._v(" "),v("tr",[v("td",[t._v("PostgreSQL(查询场景)")]),t._v(" "),v("td",[t._v("11s / 11s / 0")]),t._v(" "),v("td",[t._v("1372.5 / 1402.7 / +2.2%")]),t._v(" "),v("td",[t._v("1290.5 / 1285.9 / -0.36%")]),t._v(" "),v("td",[t._v("0.44%")]),t._v(" "),v("td",[t._v("22M")])]),t._v(" "),v("tr",[v("td",[t._v("PostgreSQL(插入场景)")]),t._v(" "),v("td",[t._v("2s / 5s / +3s")]),t._v(" "),v("td",[t._v("1622.9 / 1619.9 / -0.19%")]),t._v(" "),v("td",[t._v("1473.2 / 1514.7 / +2.8%")]),t._v(" "),v("td",[t._v("1.32%")]),t._v(" "),v("td",[t._v("22M")])]),t._v(" "),v("tr",[v("td",[t._v("OpenGauss(查询场景)")]),t._v(" "),v("td",[t._v("15s / 17s / +2s")]),t._v(" "),v("td",[t._v("1306.2 / 1309.2 / +0.22%")]),t._v(" "),v("td",[t._v("1229.8 / 1230.5 / +0.06%")]),t._v(" "),v("td",[t._v("1.77%")]),t._v(" "),v("td",[t._v("21M")])]),t._v(" "),v("tr",[v("td",[t._v("OpenGauss(插入场景)")]),t._v(" "),v("td",[t._v("7s / 8s / +1s")]),t._v(" "),v("td",[t._v("811 / 817.8 / +0.84%")]),t._v(" "),v("td",[t._v("745.6 / 745.7 / +0.13%")]),t._v(" "),v("td",[t._v("3.44%")]),t._v(" "),v("td",[t._v("21M")])])])]),t._v(" "),v("h3",{attrs:{id:"总结-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-5"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("ol",[v("li",[t._v("挂载数据库禁写插件后各场景内存增加总量在22M左右，最大TPS、平均TPS下降和CPU占用不超过5%，影响较小。")]),t._v(" "),v("li",[t._v("MySQL和MongoDB在插入场景下，执行了禁写策略，不会和数据库进行数据交互，MongoDB和MySQL执行写入数据库耗时较久，且测试Demo写操作占接口方法执行时间比重大，因此TPS增加较多；\nPostgreSQL和OpenGauss写入数据库执行时间较短，同时测试Demo写操作占接口方法时间比重较小，因此写场景下挂载SermantTPS增加不明显。")])]),t._v(" "),v("h2",{attrs:{id:"xds服务发现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xds服务发现"}},[t._v("#")]),t._v(" xDS服务发现")]),t._v(" "),v("p",[v("strong",[t._v("Sermant基于xDS协议的服务发现能力性能测试分为两组：")])]),t._v(" "),v("ol",[v("li",[v("p",[t._v("基线应用性能对比：测试Java应用挂载Sermant，静态场景下的cpu和内存损耗。")])]),t._v(" "),v("li",[v("p",[t._v("Sidecar性能对比：测试Java应用在恒定TPS下使用Sermant xDS服务发现能力或Sidecar（Envoy）相较于基线应用的性能对比，包括Pod的CPU占用、内存和服务调用时延指标。测试场景为spring-client应用调用spring-server应用，采集spring-client应用所在Pod的性能指标。")]),t._v(" "),v("blockquote",[v("p",[t._v("说明：使用 "),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/releases/download/v2.0.0/sermant-examples-xds-service-discovery-demo-2.0.0.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[t._v("xds-service-discovery-demo"),v("OutboundLink")],1),t._v(" 作为本次的基准应用进行性能测试")])])])]),t._v(" "),v("h3",{attrs:{id:"第一组测试-基线应用性能对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一组测试-基线应用性能对比"}},[t._v("#")]),t._v(" 第一组测试：基线应用性能对比")]),t._v(" "),v("h4",{attrs:{id:"部署环境-6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署环境-6"}},[t._v("#")]),t._v(" 部署环境")]),t._v(" "),v("p",[t._v("本次测试使用华为云容器引擎CCE进行应用部署，K8s集群的ECS节点数量为2个，规格如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("规格：通用计算型｜8vCPUs｜24GiB\nDocker Version: v18.09.0\nKubernetes Version: v1.21.7\nIstio Version：v1.14.3\n")])])]),v("p",[t._v("K8s中所有应用Container的规格一致，均为"),v("code",[t._v("4vCPUs|8GiB")]),t._v("。")]),t._v(" "),v("p",[t._v("Sermant版本："),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/tag/v2.0.0",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("Release v2.0.0")]),v("OutboundLink")],1)]),t._v(" "),v("h4",{attrs:{id:"测试结果-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试结果-5"}},[t._v("#")]),t._v(" 测试结果")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("测试场景")]),t._v(" "),v("th",[t._v("内存增加总量")]),t._v(" "),v("th",[t._v("堆内存增加")]),t._v(" "),v("th",[t._v("堆外内存增加")]),t._v(" "),v("th",[t._v("class增加量")]),t._v(" "),v("th",[t._v("CPU占用率增加")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("挂载Sermant不开启xDS")]),t._v(" "),v("td",[t._v("13.45M")]),t._v(" "),v("td",[t._v("0.45M")]),t._v(" "),v("td",[t._v("13M")]),t._v(" "),v("td",[t._v("1902")]),t._v(" "),v("td",[t._v("0%")])]),t._v(" "),v("tr",[v("td",[t._v("挂载Sermant开启xDS")]),t._v(" "),v("td",[t._v("35.37M")]),t._v(" "),v("td",[t._v("2.37M")]),t._v(" "),v("td",[t._v("33M")]),t._v(" "),v("td",[t._v("3837")]),t._v(" "),v("td",[t._v("0%")])])])]),t._v(" "),v("h4",{attrs:{id:"总结-6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-6"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("ol",[v("li",[t._v("宿主服务只挂载Sermant，不开启xDS服务时，Sermant框架共增加13.45M内存。其中，堆外内存中增加1902个class对象")]),t._v(" "),v("li",[t._v("宿主服务挂载Sermant开启xDS服务堆外内存共增加33M，相较于仅挂载Sermant堆外内存增加20M，主要为堆外内存新增1935个class对象，和xDS依赖和grpc依赖相关。同时，我们和主流的无代理服务治理框架进行了参考对比，开启xDS服务时增加的堆外内存属于正常范围。")])]),t._v(" "),v("h3",{attrs:{id:"第二组测试-sidecar性能对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二组测试-sidecar性能对比"}},[t._v("#")]),t._v(" 第二组测试：Sidecar性能对比")]),t._v(" "),v("h4",{attrs:{id:"部署环境-7"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署环境-7"}},[t._v("#")]),t._v(" 部署环境")]),t._v(" "),v("p",[t._v("本次测试使用华为云容器引擎CCE进行应用部署，K8s集群的ECS节点数量为2个，规格如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("规格：通用计算型｜8vCPUs｜24GiB\nDocker Version: v18.09.0\nKubernetes Version: v1.21.7\nIstio Version：v1.14.3\n")])])]),v("p",[t._v("K8s中所有应用Container的规格一致，均为"),v("code",[t._v("2vCPUs|4GiB")]),t._v("，Envoy 的Container规格同样为"),v("code",[t._v("2vCPUs|4GiB")]),t._v("。")]),t._v(" "),v("p",[t._v("Sermant版本："),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/tag/v2.0.0",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("Release v2.0.0")]),v("OutboundLink")],1)]),t._v(" "),v("h4",{attrs:{id:"测试结果-6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试结果-6"}},[t._v("#")]),t._v(" 测试结果")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("测试场景：1000TPS")]),t._v(" "),v("th",[t._v("CPU占用增加")]),t._v(" "),v("th",[t._v("内存占用增加")]),t._v(" "),v("th",[t._v("平均调用时延增加")]),t._v(" "),v("th",[t._v("p90增加")]),t._v(" "),v("th",[t._v("p99增加")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Sermant")]),t._v(" "),v("td",[t._v("3.70%")]),t._v(" "),v("td",[t._v("0.05G")]),t._v(" "),v("td",[t._v("+0ms")]),t._v(" "),v("td",[t._v("+0ms")]),t._v(" "),v("td",[t._v("+0ms")])]),t._v(" "),v("tr",[v("td",[t._v("Envoy")]),t._v(" "),v("td",[t._v("326%")]),t._v(" "),v("td",[t._v("0.06G")]),t._v(" "),v("td",[t._v("+3ms")]),t._v(" "),v("td",[t._v("+5ms")]),t._v(" "),v("td",[t._v("+3ms")])])])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("测试场景：2000TPS")]),t._v(" "),v("th",[t._v("CPU占用增加")]),t._v(" "),v("th",[t._v("内存占用增加")]),t._v(" "),v("th",[t._v("平均调用时延增加")]),t._v(" "),v("th",[t._v("p90增加")]),t._v(" "),v("th",[t._v("p99增加")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Sermant")]),t._v(" "),v("td",[t._v("2.17%")]),t._v(" "),v("td",[t._v("0.06G")]),t._v(" "),v("td",[t._v("+0ms")]),t._v(" "),v("td",[t._v("+0ms")]),t._v(" "),v("td",[t._v("+0ms")])]),t._v(" "),v("tr",[v("td",[t._v("Envoy")]),t._v(" "),v("td",[t._v("339%")]),t._v(" "),v("td",[t._v("0.06G")]),t._v(" "),v("td",[t._v("+5ms")]),t._v(" "),v("td",[t._v("+9ms")]),t._v(" "),v("td",[t._v("+10ms")])])])]),t._v(" "),v("h4",{attrs:{id:"总结-7"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-7"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("ol",[v("li",[t._v("1000TPS下，基线应用挂载Sermant进行服务发现和调用CPU增加3.7%，调用时延没有增长；使用Envoy，CPU占用相比基线应用增加超过300%，平均调用时延增加3ms，p90更是增加了5ms，资源损耗较大。")]),t._v(" "),v("li",[t._v("2000TPS下，基线应用挂载Sermant进行服务调用性能损耗基本和1000TPS场景下持平；使用Envoy时，CPU占用相比基线应用增加达到339%，平均调用时延增加扩大至5ms，p99增加了10ms。随着TPS的增大，使用Envoy的性能损耗持续扩大，尤其是服务调用时延。")]),t._v(" "),v("li",[t._v("通过性能测试对比，Sermant基于xDS协议的服务发现能力无论是CPU损耗还是调用时延等方面性能均远超Envoy。")])]),t._v(" "),v("h2",{attrs:{id:"预过滤启动加速机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#预过滤启动加速机制"}},[t._v("#")]),t._v(" 预过滤启动加速机制")]),t._v(" "),v("p",[t._v("在Sermant 2.0.0 版本开始支持了通过首次运行生成预过滤名单的方式来帮助后续启动时降低启动耗时。该方式可减少启动过程中的字节码增强的类和方法的匹配耗时，大幅缩减启动时间。")]),t._v(" "),v("h3",{attrs:{id:"部署场景-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署场景-5"}},[t._v("#")]),t._v(" 部署场景")]),t._v(" "),v("p",[t._v("本次测试使用"),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/releases/download/v1.4.0/sermant-examples-flowcontrol-demo-1.4.0.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例仓库中的demo应用"),v("OutboundLink")],1),t._v("来对启动时长进行测试，启动命令为"),v("code",[t._v("java -Dspring.cloud.zookeeper.enabled=false -Dagent.service.dynamic.config.enable=false -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar -jar spring-provider.jar")]),t._v("，关闭所有Sermant核心服务进行测试。")]),t._v(" "),v("p",[t._v("测试分为三组，第一组为被测微服务不挂载Sermant启动，第二组为被测微服务不使用预过滤方式启动，第三组为被测微服务使用预过滤方式启动。另外分别限制不同的规格来验证资源大小对启动时长的影响。分别测试整体JVM启动时长、应用启动时长以及Sermant启动时长以作分析。")]),t._v(" "),v("h3",{attrs:{id:"部署环境-8"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署环境-8"}},[t._v("#")]),t._v(" 部署环境")]),t._v(" "),v("p",[t._v("本次测试使用华为云容器引擎CCE进行应用部署，K8s集群的ECS节点数量为2个，规格如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("规格：通用计算型｜16vCPUs｜32GiB｜s2.4xlarge.2\nDocker Version: v24.0.9\nKubernetes Version: v1.25.3\n")])])]),v("p",[t._v("K8s中所有被测应用的Pod的规格一致，按实验组别分为"),v("code",[t._v("1vCPUs|2GiB")]),t._v("，"),v("code",[t._v("2vCPUs|4GiB")]),t._v("以及"),v("code",[t._v("4vCPUs|8GiB")]),t._v("。")]),t._v(" "),v("p",[t._v("Sermant版本："),v("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/tag/v2.0.0",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("Release v2.0.0")]),v("OutboundLink")],1)]),t._v(" "),v("h3",{attrs:{id:"测试结果-7"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试结果-7"}},[t._v("#")]),t._v(" 测试结果")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("规格/场景"),v("br"),t._v("（单位：s）")]),t._v(" "),v("th",[t._v("应用启动时长"),v("br"),t._v("(不挂载Sermant)")]),t._v(" "),v("th",[t._v("JVM启动时长"),v("br"),t._v("(不挂载Sermant)")]),t._v(" "),v("th",[t._v("应用启动时长"),v("br"),t._v("(挂载Sermant预过滤关)")]),t._v(" "),v("th",[t._v("JVM启动时长"),v("br"),t._v("(挂载Sermant预过滤关)")]),t._v(" "),v("th",[t._v("应用启动时长"),v("br"),t._v("(挂载Sermant预过滤开)")]),t._v(" "),v("th",[t._v("JVM启动时长"),v("br"),t._v("(挂载Sermant预过滤开)")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("1vCPUs|2GiB")])]),t._v(" "),v("td",[t._v("6.668")]),t._v(" "),v("td",[t._v("7.571")]),t._v(" "),v("td",[t._v("12.375")]),t._v(" "),v("td",[t._v("18.528")]),t._v(" "),v("td",[t._v("7.034")]),t._v(" "),v("td",[t._v("10.276")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("2vCPUs|4GiB")])]),t._v(" "),v("td",[t._v("3.233")]),t._v(" "),v("td",[t._v("3.721")]),t._v(" "),v("td",[t._v("5.476")]),t._v(" "),v("td",[t._v("10.465")]),t._v(" "),v("td",[t._v("3.116")]),t._v(" "),v("td",[t._v("5.750")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("4vCPUs|8GiB")])]),t._v(" "),v("td",[t._v("2.445")]),t._v(" "),v("td",[t._v("2.894")]),t._v(" "),v("td",[t._v("4.175")]),t._v(" "),v("td",[t._v("9.015")]),t._v(" "),v("td",[t._v("2.557")]),t._v(" "),v("td",[t._v("5.118")])])])]),t._v(" "),v("h3",{attrs:{id:"总结-8"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-8"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("应用整体的JVM启动时长在预过滤开启前受到一定影响，主要耗时开销在于Sermant本身启动过程中的处理耗时以及应用在启动过程中字节码增强的类和方法的匹配耗时。其中前者较为固定，后者受应用加载过程中的涉及类的数量的影响较大。")]),t._v(" "),v("p",[t._v("通过开启预过滤来启动应用我们可以看到，由Sermant带来的额外的JVM启动时长在"),v("code",[t._v("4vCPUs|8GiB")]),t._v("时降低超过65%，"),v("code",[t._v("2vCPUs|4GiB")]),t._v("时降低超过70%，"),v("code",[t._v("1vCPUs|2GiB")]),t._v("降低超过75%。应用自身的启动时长降低超过90%。值得注意的是，资源越小，启动时长越长，通过预过滤方式来启动的优化效果更加明显。")])],1)}),[],!1,null,null,null);v.default=r.exports}}]);