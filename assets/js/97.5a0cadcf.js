(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{542:function(a,e,t){"use strict";t.r(e);var r=t(26),s=Object(r.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"动态配置中心使用手册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态配置中心使用手册"}},[a._v("#")]),a._v(" 动态配置中心使用手册")]),a._v(" "),e("p",[a._v("本文介绍动态配置中心在Sermant使用中的场景、模型介绍以及如何使用。")]),a._v(" "),e("h2",{attrs:{id:"动态配置中心在sermant的场景和定位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态配置中心在sermant的场景和定位"}},[a._v("#")]),a._v(" 动态配置中心在Sermant的场景和定位")]),a._v(" "),e("p",[a._v("动态配置中心为Sermant动态配置功能配套组件，该功能允许Sermant从动态配置中心拉取配置以实现丰富多样的服务治理能力。用户可按需开启动态配置能力并部署动态配置中心。")]),a._v(" "),e("p",[a._v("配置中心使得Sermant在静态配置的基础上，具备了动态配置的关键能力，解决了前者提供的配置不可改变的问题，这是Sermant的服务治理多样化的实现基础。例如，")]),a._v(" "),e("ul",[e("li",[a._v("在流控插件中，流量标记和流控规则的配置和下发都是通过Sermant动态配置中心作为媒介来实现的动态流量控制；")]),a._v(" "),e("li",[a._v("在路由插件中，标签路由规则的配置下发也是通过这套动态配置能力得以生效。")])]),a._v(" "),e("p",[a._v("由于实时配置中心这块业界已有很多成熟的开源产品，因此Sermant本身并不提供配置中心的单独实现，而是通过对开源的配置中心进行集成，以达到服务治理规则可实时动态配置的业务目标。")]),a._v(" "),e("p",[a._v("在具体实现上，Sermant Agent内部定义了一套动态配置的通用接口。基于这种架构，")]),a._v(" "),e("ul",[e("li",[a._v("用户通过Sermant Agent的配置，来决定Sermant实际对接的配置中心类型。也可以在运维场景中，根据各服务治理插件的使用手册，直接操作动态配置中心，以达到动态配置的业务目标。")]),a._v(" "),e("li",[a._v("开发者在Plugin开发中，只需要对接Sermant动态配置的通用接口，即可实现动态配置的功能，而不需要关注动态配置中心本身的各种选型和实现。")])]),a._v(" "),e("p",[a._v("以下架构图说明了该架构的原理。")]),a._v(" "),e("MyImage",{attrs:{src:"/docs-img/dynamic-configuration-center.png"}}),a._v(" "),e("h2",{attrs:{id:"参数配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数配置"}},[a._v("#")]),a._v(" 参数配置")]),a._v(" "),e("p",[a._v("动态配置中心的配置，请参见对应的开源动态配置中心 (如"),e("a",{attrs:{href:"https://zookeeper.apache.org/releases.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("ZooKeeper"),e("OutboundLink")],1),a._v(" 、"),e("a",{attrs:{href:"https://servicecomb.apache.org/cn/release/kie-downloads/",target:"_blank",rel:"noopener noreferrer"}},[a._v("ServiceComb Kie"),e("OutboundLink")],1),a._v("、"),e("a",{attrs:{href:"https://github.com/alibaba/nacos/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("Nacos"),e("OutboundLink")],1),a._v(") 。本文中不作详细赘述。")]),a._v(" "),e("p",[a._v("首先，Sermant Agent的产品包"),e("code",[a._v("agent/config/config.properties")]),a._v("中配置"),e("code",[a._v("agent.service.dynamic.config.enable=true")]),a._v("，将"),e("strong",[a._v("启用动态配置服务")]),a._v("。其他Sermant Agent中对应的动态配置中心参数，也都可以在该文件中进行配置。")]),a._v(" "),e("h2",{attrs:{id:"sermant动态配置中心模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sermant动态配置中心模型"}},[a._v("#")]),a._v(" Sermant动态配置中心模型")]),a._v(" "),e("p",[a._v("以Sermant Agent中的"),e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/com/huaweicloud/sermant/core/service/dynamicconfig/api/KeyGroupService.java",target:"_blank",rel:"noopener noreferrer"}},[a._v("KeyGroupService.publishConfig"),e("OutboundLink")],1),a._v("接口函数说明Sermant中的配置模型。")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 设置组下某个键的配置值\n *\n * @param key     键\n * @param group   组\n * @param content 配置值\n * @return 是否操作成功\n */")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("publishConfig")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" group"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("p",[a._v("在上述例子中可见，在Sermant Agent中确定配置项的两个参数分别是：")]),a._v(" "),e("ul",[e("li",[a._v("key: 最小配置单元的键值。")]),a._v(" "),e("li",[a._v("group: 组，类似key的前缀。Sermant主要是通过Group来对接一些配置中心的租户隔离功能。")])]),a._v(" "),e("p",[a._v("对于不同的配置中心，以group和key有不同的匹配模型。下文中详细说明。")]),a._v(" "),e("p",[a._v("对于使用者来说，使用动态配置中心需要在插件中开发过程中获取DynamicConfigService的实例，并根据自身场景调用"),e("code",[a._v("DynamicConfigService")]),a._v("提供的各种抽象接口来进行相应的服务治理。详细的API接口的解析以及开发指南可参考开发者指南中的"),e("RouterLink",{attrs:{to:"/zh/document/developer-guide/dynamic-config-func.html"}},[a._v("动态配置功能开发指导")]),a._v("。")],1),a._v(" "),e("h2",{attrs:{id:"sermant-基于不同动态配置中心的配置模型实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sermant-基于不同动态配置中心的配置模型实现"}},[a._v("#")]),a._v(" Sermant 基于不同动态配置中心的配置模型实现")]),a._v(" "),e("p",[a._v("以下章节讨论几个配置中心的典型实现。通过理解该模型实现，用户可以理解如何在不通配置中心找到对应的配置项，以及进行动态配置以达到服务治理管理的目标。")]),a._v(" "),e("h3",{attrs:{id:"基于-zookeeper-的配置模型实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-zookeeper-的配置模型实现"}},[a._v("#")]),a._v(" 基于 Zookeeper 的配置模型实现")]),a._v(" "),e("p",[a._v("对于"),e("code",[a._v("ZooKeeper")]),a._v("服务器来说，所谓的动态配置就是"),e("code",[a._v("ZooKeeper")]),a._v("节点的值，至于"),e("code",[a._v("Key")]),a._v("和"),e("code",[a._v("Group")]),a._v("应当作为构建节点路径的元素。考虑到"),e("code",[a._v("Group")]),a._v("包含区别使用者的信息，应当作为节点路径的前缀，这样"),e("code",[a._v("Key")]),a._v("值则作为后半部分存在：")]),a._v(" "),e("div",{staticClass:"language-txt extra-class"},[e("pre",{pre:!0,attrs:{class:"language-txt"}},[e("code",[a._v("/${group}/${key} -> ${value}\n")])])]),e("h3",{attrs:{id:"基于-servicecomb-kie-的配置模型实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-servicecomb-kie-的配置模型实现"}},[a._v("#")]),a._v(" 基于 ServiceComb Kie 的配置模型实现")]),a._v(" "),e("p",[a._v("对于"),e("code",[a._v("Kie")]),a._v("服务来说，所谓动态配置就是"),e("code",[a._v("Kie")]),a._v("配置的键值，"),e("code",[a._v("Kie")]),a._v("是基于标签去查询关联配置， 至于"),e("code",[a._v("Key")]),a._v("与"),e("code",[a._v("Group")]),a._v("则是关联配置的元素。"),e("code",[a._v("Key")]),a._v("即配置的键的名称，而"),e("code",[a._v("Group")]),a._v("则是关联"),e("code",[a._v("Key")]),a._v("的标签， 每一个"),e("code",[a._v("Key")]),a._v("都可配置一个或者多个标签，其格式往往如下:")]),a._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[a._v("{\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('  "key"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"keyName",                # 配置键')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('  "value"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"value",                # 配置值')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('  "labels"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("{")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('    "service"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"serviceName"     #标签，kv形式，支持一个或者多个')]),a._v("\n  },\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('  "status"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"enabled"')]),a._v("\n}\n")])])]),e("p",[a._v("相对于"),e("code",[a._v("Zookeeper")]),a._v(", "),e("code",[a._v("Kie")]),a._v("更专注于"),e("code",[a._v("Group")]),a._v(", 其传值格式也有所不同，"),e("code",[a._v("Kie")]),a._v("的传值格式如下:")]),a._v(" "),e("div",{staticClass:"language-txt extra-class"},[e("pre",{pre:!0,attrs:{class:"language-txt"}},[e("code",[a._v("groupKey1=groupValue1[&groupKey2=groupVaue2...]\n")])])]),e("blockquote",[e("p",[a._v("其中"),e("code",[a._v("groupKey")]),a._v("为标签键， "),e("code",[a._v("groupValue")]),a._v("则为标签值，多个标签使用&拼接；"),e("code",[a._v("Group")]),a._v("可通过"),e("code",[a._v("LabelGroupUtils#createLabelGroup")]),a._v("生成")]),a._v(" "),e("p",[e("strong",[a._v("特别说明：")])]),a._v(" "),e("p",[a._v("若传入的"),e("code",[a._v("Group")]),a._v("非以上格式，则会默认添加标签"),e("code",[a._v("GROUP=传入Group")])])]),a._v(" "),e("h3",{attrs:{id:"基于-nacos-的配置模型实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-nacos-的配置模型实现"}},[a._v("#")]),a._v(" 基于 Nacos 的配置模型实现")]),a._v(" "),e("p",[a._v("对于"),e("code",[a._v("Nacos")]),a._v("服务来说，所谓动态配置就是"),e("code",[a._v("Nacos")]),a._v("的配置值，"),e("code",[a._v("Nacos")]),a._v("本身包含"),e("code",[a._v("namespaceId")]),a._v("、"),e("code",[a._v("group")]),a._v("和"),e("code",[a._v("dataId")]),a._v("。其中"),e("code",[a._v("namespaceId")]),a._v("默认取值为"),e("code",[a._v("agent/config/config.properties")]),a._v("中的"),e("code",[a._v("service.meta.project")]),a._v("即指定服务命名空间；"),e("code",[a._v("group")]),a._v("与动态配置核心的"),e("code",[a._v("group")]),a._v("保持一致；"),e("code",[a._v("dataId")]),a._v("设置为动态配置核心的"),e("code",[a._v("Key")]),a._v("即配置的键名称，其格式如下:")]),a._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[a._v("{\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('    "group"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"Group", \t\t\t# 配置组')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('    "dataId"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"Key",  \t\t\t# 配置键')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('    "content"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"config", \t\t# 配置值')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('    "namespaceId"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"default"\t# 指定服务命名空间')]),a._v("\n}\n")])])]),e("p",[e("code",[a._v("Nacos")]),a._v("对于"),e("code",[a._v("group")]),a._v("和"),e("code",[a._v("dataId")]),a._v("的命名格式要求如下，具体参考"),e("a",{attrs:{href:"https://nacos.io/zh-cn/docs/sdk.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Nacos文档"),e("OutboundLink")],1),a._v(":")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("dataId")]),a._v('只允许英文字符和4种特殊字符（"."、":"、"-"、"_"），不超过256字节。')]),a._v(" "),e("li",[e("code",[a._v("group")]),a._v('只允许英文字符和4种特殊字符（"."、":"、"-"、"_"），不超过128字节。')])]),a._v(" "),e("blockquote",[e("p",[e("strong",[a._v("特别说明：")])]),a._v(" "),e("p",[a._v("若传入的"),e("code",[a._v("group")]),a._v("包含"),e("code",[a._v("=")]),a._v("、"),e("code",[a._v("&")]),a._v("、"),e("code",[a._v("/")]),a._v("三种非法字符时，动态配置核心将自动将其转换为合法字符：\n"),e("code",[a._v("=")]),a._v("转换为"),e("code",[a._v(":")]),a._v("、"),e("code",[a._v("&")]),a._v("转换为"),e("code",[a._v("_")]),a._v("、"),e("code",[a._v("/")]),a._v("转换为"),e("code",[a._v(".")]),a._v("。")])]),a._v(" "),e("h2",{attrs:{id:"动态配置中心支持的组件及版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态配置中心支持的组件及版本"}},[a._v("#")]),a._v(" 动态配置中心支持的组件及版本")]),a._v(" "),e("p",[a._v("目前Sermant支持的配置中心组件为:")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://zookeeper.apache.org/releases.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("ZooKeeper"),e("OutboundLink")],1),a._v("，使用版本为3.6.3。")]),a._v(" "),e("li",[e("a",{attrs:{href:"https://servicecomb.apache.org/cn/release/kie-downloads/",target:"_blank",rel:"noopener noreferrer"}},[a._v("ServiceComb Kie"),e("OutboundLink")],1),a._v("，使用的版本为0.2.0。")]),a._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/alibaba/nacos/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("Nacos"),e("OutboundLink")],1),a._v("，使用版本为2.1.0。")])]),a._v(" "),e("h2",{attrs:{id:"启动和结果验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动和结果验证"}},[a._v("#")]),a._v(" 启动和结果验证")]),a._v(" "),e("p",[a._v("本教程使用"),e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant-examples/tree/main/sermant-template/template",target:"_blank",rel:"noopener noreferrer"}},[a._v("Sermant-examples"),e("OutboundLink")],1),a._v("仓库中的demo插件来进行动态配置能力的演示，该插件中实现添加监听器以监听动态配置变化。")]),a._v(" "),e("h3",{attrs:{id:"zookeeper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[a._v("#")]),a._v(" Zookeeper")]),a._v(" "),e("h4",{attrs:{id:"启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[a._v("#")]),a._v(" 启动")]),a._v(" "),e("p",[a._v("首先启动配置中心Zookeeper，Zookeepr部署可自行查找相关资料。")]),a._v(" "),e("p",[a._v("接下来以"),e("strong",[a._v("Sermant-example")]),a._v("项目 "),e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant-examples/tree/main/sermant-template/demo-application",target:"_blank",rel:"noopener noreferrer"}},[a._v("demo-application "),e("OutboundLink")],1),a._v("为宿主应用，执行以下命令挂载sermant-agent启动demo-application:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Run under Windows")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" -javaagent:sermant-agent-x.x.x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("test "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" demo-application.jar\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Run under Linux")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" -javaagent:sermant-agent-x.x.x/agent/sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("test "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" demo-application.jar\n")])])]),e("h4",{attrs:{id:"发布配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布配置"}},[a._v("#")]),a._v(" 发布配置")]),a._v(" "),e("p",[a._v("使用Zookeeper命令行工具或可视化工具发布配置。此处以命令行工具为例，执行以下命令：")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("create /app"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default/demo "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"test"')]),a._v("\n")])])]),e("p",[a._v("其中"),e("code",[a._v("app=default")]),a._v("即为group的值，"),e("code",[a._v("demo")]),a._v("即为key值，"),e("code",[a._v("test")]),a._v("为value值。")]),a._v(" "),e("p",[a._v("创建节点数据成功后，即成功在配置中心发布了动态配置。")]),a._v(" "),e("h4",{attrs:{id:"验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[a._v("#")]),a._v(" 验证")]),a._v(" "),e("p",[a._v("查看Sermant日志文件sermant-0.log，默认日志文件路径为"),e("code",[a._v("./logs/sermant/core")]),a._v("。")]),a._v(" "),e("p",[a._v("观察日志文件中是否包含以下日志输出：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[DemoDynaConfService]-DynamicConfigEvent{key='demo', group='app=default', content='test', eventType=CREATE} com.huaweicloud.sermant.core.service.dynamicconfig.common.DynamicConfigEvent[source=demo,app=default]\n")])])]),e("p",[a._v("如果日志输出无误，则说明动态配置发布成功，Sermant Agent已监听到动态配置。")]),a._v(" "),e("h3",{attrs:{id:"kie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kie"}},[a._v("#")]),a._v(" Kie")]),a._v(" "),e("p",[a._v("Kie与Zoopeepr使用方式类似，唯一不同的是发布配置按照Kie的方式执行。")]),a._v(" "),e("h4",{attrs:{id:"启动-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-2"}},[a._v("#")]),a._v(" 启动")]),a._v(" "),e("p",[a._v("首先启动配置中心Kie，Kie部署可自行查找相关资料。")]),a._v(" "),e("p",[a._v("接下来以"),e("strong",[a._v("Sermant-example")]),a._v("项目 "),e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant-examples/tree/main/sermant-template/demo-application",target:"_blank",rel:"noopener noreferrer"}},[a._v("demo-application "),e("OutboundLink")],1),a._v("为宿主应用，执行以下命令挂载sermant-agent启动demo-application:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Run under Windows")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" -javaagent:sermant-agent-x.x.x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("test "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" demo-application.jar\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Run under Linux")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" -javaagent:sermant-agent-x.x.x/agent/sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("test "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" demo-application.jar\n")])])]),e("h4",{attrs:{id:"发布配置-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布配置-2"}},[a._v("#")]),a._v(" 发布配置")]),a._v(" "),e("p",[a._v("通过Kie发布以下动态配置：")]),a._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[a._v("{\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('  "key"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"demo",          ')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('  "value"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"test",              ')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('  "labels"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("{")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('    "app"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"default"     ')]),a._v("\n  },\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v('  "status"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"enabled"')]),a._v("\n}\n")])])]),e("p",[a._v("其中"),e("code",[a._v("app=default")]),a._v("即为group的值，"),e("code",[a._v("demo")]),a._v("即为key值，"),e("code",[a._v("test")]),a._v("为value值。")]),a._v(" "),e("p",[a._v("创建节点数据成功后，即成功在配置中心发布了动态配置。")]),a._v(" "),e("h4",{attrs:{id:"验证-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-2"}},[a._v("#")]),a._v(" 验证")]),a._v(" "),e("p",[a._v("查看Sermant日志文件sermant-0.log，默认日志文件路径为"),e("code",[a._v("./logs/sermant/core")]),a._v("。")]),a._v(" "),e("p",[a._v("观察日志文件中是否包含以下日志输出：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[DemoDynaConfService]-DynamicConfigEvent{key='demo', group='app=default', content='test', eventType=CREATE} com.huaweicloud.sermant.core.service.dynamicconfig.common.DynamicConfigEvent[source=demo,app=default]\n")])])]),e("p",[a._v("如果日志输出无误，则说明动态配置发布成功，sermant-agent已监听到动态配置。")]),a._v(" "),e("h3",{attrs:{id:"nacos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nacos"}},[a._v("#")]),a._v(" Nacos")]),a._v(" "),e("p",[a._v("Nacos与Zookeeper和Kie使用方式类似，唯一不同的是发布配置按照Nacos的方式执行。")]),a._v(" "),e("h4",{attrs:{id:"启动-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-3"}},[a._v("#")]),a._v(" 启动")]),a._v(" "),e("p",[a._v("首先启动配置中心Nacos，Nacos部署可自行查找相关资料。")]),a._v(" "),e("p",[a._v("接下来以"),e("strong",[a._v("Sermant-example")]),a._v("项目 "),e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant-examples/tree/main/sermant-template/demo-application",target:"_blank",rel:"noopener noreferrer"}},[a._v("demo-application "),e("OutboundLink")],1),a._v("为宿主应用，执行以下命令挂载sermant-agent启动demo-application:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Run under Windows")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" -javaagent:sermant-agent-x.x.x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("test "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" demo-application.jar\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Run under Linux")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" -javaagent:sermant-agent-x.x.x/agent/sermant-agent.jar"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appName"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("test "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" demo-application.jar\n")])])]),e("h4",{attrs:{id:"发布配置-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布配置-3"}},[a._v("#")]),a._v(" 发布配置")]),a._v(" "),e("p",[a._v("通过控制台命令行发布以下动态配置：")]),a._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("curl")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("-d 'dataId=demo' \\\n  -d 'group=app:default' \\\n  -d 'namespaceId=default' \\\n  -d 'content=test' \\\n  -X POST 'http://ip:port/nacos/v2/cs/config'")]),a._v("\n")])])]),e("p",[a._v("其中"),e("code",[a._v("app:default")]),a._v("即为经过合法化后的group的值，"),e("code",[a._v("demo")]),a._v("即为key值，"),e("code",[a._v("test")]),a._v("为value值，"),e("code",[a._v("default")]),a._v("为指定服务命名空间即"),e("code",[a._v("agent/config/config.properties")]),a._v("中的"),e("code",[a._v("service.meta.project")]),a._v("。")]),a._v(" "),e("p",[a._v("创建节点数据成功后，即成功在配置中心发布了动态配置。")]),a._v(" "),e("h4",{attrs:{id:"验证-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-3"}},[a._v("#")]),a._v(" 验证")]),a._v(" "),e("p",[a._v("查看Sermant日志文件sermant-0.log，默认日志文件路径为"),e("code",[a._v("./logs/sermant/core")]),a._v("。")]),a._v(" "),e("p",[a._v("观察日志文件中是否包含以下日志输出：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[DemoDynaConfService]-DynamicConfigEvent{key='demo', group='app:default', content='test', eventType=CREATE} com.huaweicloud.sermant.core.service.dynamicconfig.common.DynamicConfigEvent[source=demo,app=default]\n")])])]),e("p",[a._v("如果日志输出无误，则说明动态配置发布成功，sermant-agent已监听到动态配置。")])],1)}),[],!1,null,null,null);e.default=s.exports}}]);