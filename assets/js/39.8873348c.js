(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{484:function(t,e,s){"use strict";s.r(e);var a=s(26),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"xds-service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xds-service"}},[t._v("#")]),t._v(" xDS Service")]),t._v(" "),e("p",[t._v("Istio is deployed with a control plane and a data plane. Traditionally, the data plane uses sidecar containers with network proxies (such as Envoy), which increases network latency for microservice calls. In Kubernetes environments, Sermant uses the xDS protocol to communicate directly with Istiod, enabling service discovery. Using a "),e("RouterLink",{attrs:{to:"/en/document/user-guide/sermant-xds.html"}},[t._v("Proxyless Service Mesh based on Istio+Sermant")]),t._v(" can significantly reduce microservice call latency and simplify system deployment. This article introduces how to use Sermant's xDS service in plugin development.")],1),t._v(" "),e("h2",{attrs:{id:"service-discovery-based-on-xds-protocol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service-discovery-based-on-xds-protocol"}},[t._v("#")]),t._v(" Service Discovery Based on xDS Protocol")]),t._v(" "),e("h3",{attrs:{id:"feature-introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feature-introduction"}},[t._v("#")]),t._v(" Feature Introduction")]),t._v(" "),e("p",[e("strong",[t._v("Service discovery based on xDS protocol")]),t._v(" allows Sermant to connect to Istio's control plane to obtain Kubernetes service information and the corresponding specific service instance information.")]),t._v(" "),e("blockquote",[e("p",[t._v("Note: Using Sermant's xDS service discovery capability requires the service to be deployed in a Kubernetes container environment and istio is running.")])]),t._v(" "),e("h3",{attrs:{id:"development-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#development-example"}},[t._v("#")]),t._v(" Development Example")]),t._v(" "),e("p",[t._v("This development example is based on the project created in the "),e("RouterLink",{attrs:{to:"/en/document/developer-guide/"}},[t._v("Creating Your First Plugin")]),t._v(" document and demonstrates how the plugin uses the xDS service discovery capability provided by the Sermant framework to obtain service instances:")],1),t._v(" "),e("ol",[e("li",[e("p",[t._v("Add the "),e("code",[t._v("xdsServiceDiscovery")]),t._v(" variable in the "),e("code",[t._v("com.huaweicloud.sermant.template.TemplateDeclarer")]),t._v(" class under "),e("code",[t._v("template/template-plugin")]),t._v(" in the project to get the xDS service discovery service provided by the Sermant framework for obtaining service instances:")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XdsServiceDiscovery")]),t._v(" xdsServiceDiscovery "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XdsCoreService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getXdsServiceDiscovery")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("After obtaining the service discovery instance, you can call the APIs provided by "),e("code",[t._v("XdsServiceDiscovery")]),t._v(" to perform corresponding actions. This example demonstrates how to directly obtain service instance information for a service named "),e("code",[t._v("service-test")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" serviceInstance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xdsServiceDiscovery"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"service-test"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" iterator "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serviceInstance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceInstance")]),t._v(" instance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceInstance: ["')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHost")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('" : "')]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("Note: "),e("code",[t._v("service-test")]),t._v(" must be the name of the Kubernetes Service. The obtained service instance information \tcorresponds to the Pod instance data of that service, an example Kubernetes Service looks like this:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: service-test\nspec:\n  type: ClusterIP\n  ports:\n  - name: http\n  \tport: 8080\n    targetPort: 8080\n    protocol: TCP\n  selector:\n    app: service-test\n")])])]),e("p",[t._v("After completing the development, refer to the "),e("RouterLink",{attrs:{to:"/en/document/developer-guide/#packaged-build"}},[t._v("Packaging and Building")]),t._v(" process in the Creating Your First Plugin \tdocument. Execute "),e("strong",[t._v("mvn package")]),t._v(" in the root directory of the project to generate the build artifact.")],1)]),t._v(" "),e("li",[e("p",[t._v("Enable the xDS service and set it to be enabled in "),e("code",[t._v("agent/config/config.properties")]),t._v(" with the following configuration:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# xDS service switch\nagent.service.xds.service.enable=true\n")])])])]),t._v(" "),e("li",[e("p",[t._v("After completing the execution, package the Sermant image and the host microservice image. Start the "),e("code",[t._v("service-test")]),t._v("service in the k8s environment and create the corresponding service instances (implemented by the user). Finally, start the host application in Kubernetes and mount Sermant. Refer to the "),e("RouterLink",{attrs:{to:"/en/document/user-guide/injector.html#startup-and-result-validation"}},[t._v("Sermant Injector User Guide")]),t._v(" for guidance on packaging Sermant and the host image in the Kubernetes environment, as well as mounting Sermant for startup.")],1)]),t._v(" "),e("li",[e("p",[t._v("After the host microservice pod with Sermant mounted starts successfully, you can execute the following command to obtain the host microservice logs and view the service instances obtained through the xDS service discovery capability:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ kubectl logs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${POD_NAME}")]),t._v("\nServiceInstance: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("xxx.xxx.xxx.xxx "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" xxxx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("Note: "),e("code",[t._v("${POD_NAME}")]),t._v(" must be the name of the pod running the host microservice, which can be viewed using the "),e("code",[t._v("kubectl get pod")]),t._v(" command.")])])])]),t._v(" "),e("h3",{attrs:{id:"xds-service-discovery-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xds-service-discovery-api"}},[t._v("#")]),t._v(" xDS Service Discovery API")]),t._v(" "),e("p",[e("strong",[t._v("Obtain xDS Service Discovery Service:")])]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XdsServiceDiscovery")]),t._v(" xdsServiceDiscovery "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XdsCoreService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getXdsServiceDiscovery")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("The "),e("strong",[t._v("xDS Service Discovery")]),t._v(" service has two interface methods, used respectively for directly obtaining service instances and obtaining service instances through subscription:")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" serviceName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribeServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" serviceName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XdsServiceDiscoveryListener")]),t._v(" listener"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h4",{attrs:{id:"directly-obtain-service-instance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#directly-obtain-service-instance"}},[t._v("#")]),t._v(" Directly Obtain Service Instance")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Obtain the service instance information of the Kubernetes service, returning a "),e("code",[t._v("java.util.Set")]),t._v(" containing all instances of the service.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("xdsServiceDiscovery"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"service-test"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("h4",{attrs:{id:"subscribe-to-obtain-service-instances"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subscribe-to-obtain-service-instances"}},[t._v("#")]),t._v(" Subscribe to Obtain Service Instances")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Subscribe to the service instance information of the Kubernetes service and register a service discovery listener. The listener's "),e("code",[t._v("process")]),t._v(" function can execute custom operations when service instances change.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("xdsServiceDiscovery"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribeServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"service-test"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XdsServiceDiscoveryListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" instances"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/service/xds/listener/XdsServiceDiscoveryListener.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("XdsServiceDiscoveryListener"),e("OutboundLink")],1),t._v("，contains the following interface methods:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Method")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("void process(Set"),e("ServiceInstance",[t._v(" instances)")])],1),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Callback interface for processing the latest service instance information")])])])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/sermant-io/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/io/sermant/core/service/xds/entity/ServiceInstance.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ServiceInstance"),e("OutboundLink")],1),t._v(", with the following methods:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Return Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Method Name")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("getClusterName()")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Get the Istio cluster name the instance belongs to")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("getServiceName()")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Get the Kubernetes service name the instance belongs to")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("getHost()")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Get the Pod IP of the instance")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("int")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("getPort()")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Get the port of the instance")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Map<String, String>")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("getMetaData()")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Get the metadata of the instance")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("isHealthy()")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Check if the service is healthy")])])])])])]),t._v(" "),e("h2",{attrs:{id:"xds-service-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xds-service-configuration"}},[t._v("#")]),t._v(" xDS Service Configuration")]),t._v(" "),e("p",[t._v("In the "),e("code",[t._v("agent/config/config.properties")]),t._v(" file of the Sermant Agent package, you can enable the xDS service using the "),e("code",[t._v("agent.service.xds.service.enable")]),t._v(" configuration item. Other xDS service configurations are also set in this file:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# xDS service switch\nagent.service.xds.service.enable=false\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);