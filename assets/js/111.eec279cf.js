(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{560:function(e,t,r){"use strict";r.r(t);var s=r(26),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"基于sermant-istio的无代理服务网格"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于sermant-istio的无代理服务网格"}},[e._v("#")]),e._v(" 基于Sermant+Istio的无代理服务网格")]),e._v(" "),t("h2",{attrs:{id:"istio下的sermant服务治理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#istio下的sermant服务治理"}},[e._v("#")]),e._v(" Istio下的Sermant服务治理")]),e._v(" "),t("p",[e._v("服务网格（Service Mesh）是处理服务间通信的基础设施层。它负责构成现代云原生应用程序的复杂服务拓扑来可靠地交付请求。在实践中，Service Mesh 通常以轻量级网络代理阵列的形式实现，这些代理与应用程序代码部署在一起，对应用程序来说无需感知代理的存在。")]),e._v(" "),t("p",[e._v("Istio是目前应用最广泛的Service Mesh产品，由控制平面和数据平面组成。Istio的数据平面一般会启动独立的Sidecar容器代理业务微服务的网络，因此会增加额外的性能损耗，包括CPU占用增加和服务调用时延的大幅增长，除此之外，系统的复杂性和运维的难度也在增加。")]),e._v(" "),t("p",[e._v("Sermant xDS服务使微服务可以在Kubenetes场景下接入Istio。Sermant基于xDS协议和Istio的控制平面直接进行通信，获取服务发现、路由、负载均衡等配置信息，从而可以替代Envoy作为Istio的数据平面完成服务治理能力。")]),e._v(" "),t("p",[e._v("Sermant是基于Java Agent的云原生无代理服务网格，业务微服务挂载Sermant同进程运行，无需启动额外的Sidecar容器进行网络代理，可以大幅度降低应用的性能损耗和服务之间的调用时延。")]),e._v(" "),t("h3",{attrs:{id:"istio-sermant的sidecar无代理模式部署形态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#istio-sermant的sidecar无代理模式部署形态"}},[e._v("#")]),e._v(" Istio+Sermant的Sidecar无代理模式部署形态")]),e._v(" "),t("MyImage",{attrs:{src:"/docs-img/xds-deploy.jpg"}}),e._v(" "),t("ol",[t("li",[e._v("混合部署模式：Sidecar代理模式和Sidecar无代理模式共存。业务微服务通过混合部署模式接入Istio并实现服务治理能力，该模式可以避免修改已有的部署架构，仅新增服务使用Sidecar无代理模式。")]),e._v(" "),t("li",[e._v("无代理部署模式：所有的业务微服务均使用Sermant作为Istio的数据平面实现服务发现、路由、负载均衡等能力。Sermant可以替代Envoy提供的能力，当前已经支持了服务发现，未来功能将持续演进。")])]),e._v(" "),t("h3",{attrs:{id:"istio环境下使用sermant的优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#istio环境下使用sermant的优势"}},[e._v("#")]),e._v(" Istio环境下使用Sermant的优势")]),e._v(" "),t("ol",[t("li",[e._v("Sermant和业务微服务同进程运行，无需启动额外的Sidecar容器，大幅减少网络调用时延和CPU损耗。")]),e._v(" "),t("li",[e._v("基于Sermant框架开发插件可以实现比Envoy更丰富的治理能力，可扩展性更强。")]),e._v(" "),t("li",[e._v("更低的架构复杂度可以带来更低的部署成本。")])]),e._v(" "),t("h2",{attrs:{id:"基于xds服务的服务发现能力"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于xds服务的服务发现能力"}},[e._v("#")]),e._v(" 基于xDS服务的服务发现能力")]),e._v(" "),t("p",[e._v("Sermant框架层基于xDS协议实现了服务发现能力，插件可以调用xDS服务发现接口获取Kubenetes的服务实例，具体开发指导请参考"),t("RouterLink",{attrs:{to:"/zh/document/developer-guide/sermant-xds-service.html#基于xDS服务的服务发现"}},[e._v("基于xDS服务的服务发现开发指导")]),e._v("。")],1),e._v(" "),t("h3",{attrs:{id:"计划支持xds服务发现能力的sermant插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#计划支持xds服务发现能力的sermant插件"}},[e._v("#")]),e._v(" 计划支持xDS服务发现能力的Sermant插件")]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/zh/document/plugin/router.html"}},[e._v("路由插件")])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/zh/document/plugin/springboot-registry.html"}},[e._v("SpringBoot注册插件")])],1)]),e._v(" "),t("h2",{attrs:{id:"基于xds服务的路由能力"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于xds服务的路由能力"}},[e._v("#")]),e._v(" 基于xDS服务的路由能力")]),e._v(" "),t("p",[e._v("未来Sermant框架层将基于xDS协议实现路由配置获取能力，并用于插件层进行服务治理。")]),e._v(" "),t("h2",{attrs:{id:"基于xds服务的负载均衡能力"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于xds服务的负载均衡能力"}},[e._v("#")]),e._v(" 基于xDS服务的负载均衡能力")]),e._v(" "),t("p",[e._v("未来Sermant框架层将基于xDS协议实现负载均衡配置获取能力，并用于插件层进行服务治理。")]),e._v(" "),t("h2",{attrs:{id:"支持版本和限制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支持版本和限制"}},[e._v("#")]),e._v(" 支持版本和限制")]),e._v(" "),t("h3",{attrs:{id:"版本支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本支持"}},[e._v("#")]),e._v(" 版本支持")]),e._v(" "),t("p",[e._v("Istio版本：1.6版本及以上")]),e._v(" "),t("p",[e._v("Kubenetes版本和Istio的版本适配请参考"),t("a",{attrs:{href:"https://istio.io/latest/zh/docs/releases/supported-releases/#support-status-of-istio-releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("Istio版本支持"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"限制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#限制"}},[e._v("#")]),e._v(" 限制")]),e._v(" "),t("p",[e._v("Sermant是基于Java Agent的云原生无代理服务网格，仅支持Java语言。")]),e._v(" "),t("h2",{attrs:{id:"启动和结果验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动和结果验证"}},[e._v("#")]),e._v(" 启动和结果验证")]),e._v(" "),t("p",[e._v("本教程使用"),t("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/tree/main/xds-service-discovery-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sermant-examples"),t("OutboundLink")],1),e._v("仓库中的xds-service-discovery-demo演示Sermant的xDS服务发现能力。本Demo中包括spring-client微服务、spring-server微服务和Sermant示例插件，该插件拦截spring-client的"),t("code",[e._v("hello")]),e._v("方法，在"),t("code",[e._v("hello")]),e._v("方法执行前通过Sermant的xDS服务发现能力获取spring-server服务的具体实例信息，并替换入参为正确的sprng-server地址。")]),e._v(" "),t("h3",{attrs:{id:"_1-准备工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备工作"}},[e._v("#")]),e._v(" 1 准备工作")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/releases/download/v2.0.0/sermant-examples-xds-service-discovery-demo-2.0.0.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[e._v("下载"),t("OutboundLink")],1),e._v(" Demo二进制产物压缩包")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://kubernetes.io/zh-cn/docs/tutorials/hello-minikube/",target:"_blank",rel:"noopener noreferrer"}},[e._v("准备"),t("OutboundLink")],1),e._v(" Kubenetes环境")]),e._v(" "),t("li",[e._v("安装"),t("a",{attrs:{href:"https://istio.io/latest/zh/docs/setup/getting-started/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Istio"),t("OutboundLink")],1),e._v("并启动")])]),e._v(" "),t("h3",{attrs:{id:"_2-获取demo二进制产物"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取demo二进制产物"}},[e._v("#")]),e._v(" 2 获取Demo二进制产物")]),e._v(" "),t("p",[e._v("解压Demo二进制产物压缩包，即可得到"),t("code",[e._v("product/")]),e._v("目录文件。")]),e._v(" "),t("h3",{attrs:{id:"_3-启动spring-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-启动spring-server"}},[e._v("#")]),e._v(" 3 启动spring-server")]),e._v(" "),t("p",[e._v("进入product/spring-server目录：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("执行以下命令打包spring-server镜像：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sh build-server.sh\n")])])])]),e._v(" "),t("li",[t("p",[e._v("执行以下命令运行spring-server Pod和Service")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl apply -f spring-server.yaml\n")])])])])]),e._v(" "),t("h3",{attrs:{id:"_4-启动spring-client"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-启动spring-client"}},[e._v("#")]),e._v(" 4 启动spring-client")]),e._v(" "),t("p",[e._v("进入product/spring-client目录：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("执行以下命令打包spring-client镜像：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sh build-client.sh\n")])])])]),e._v(" "),t("li",[t("p",[e._v("执行以下命令运行spring-client Pod和Service")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl apply -f spring-client.yaml\n")])])])])]),e._v(" "),t("h3",{attrs:{id:"_5-验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-验证"}},[e._v("#")]),e._v(" 5 验证")]),e._v(" "),t("p",[e._v("通过网页访问spring-client微服务，入参address设置为空，验证Sermant是否能成功调用上游服务spring-server：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("http://127.0.0.1:30110/hello?address=\n")])])]),t("p",[e._v("网页收到如下显示，说明Sermant成功发现了spring-server的实例并修改了入参address为正确的spring-server实例地址：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Greetings from http://xxx.xxx.xxx.xxx:8080 : hello, the current time is 2050-01-01T02:08:08.369\n")])])])],1)}),[],!1,null,null,null);t.default=a.exports}}]);