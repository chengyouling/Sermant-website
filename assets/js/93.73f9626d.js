(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{541:function(t,e,a){"use strict";a.r(e);var s=a(26),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"数据库禁写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库禁写"}},[t._v("#")]),t._v(" 数据库禁写")]),t._v(" "),e("p",[t._v("本文介绍"),e("a",{attrs:{href:"https://github.com/sermant-io/Sermant/tree/develop/sermant-plugins/sermant-database-write-prohibition",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据库禁写插件"),e("OutboundLink")],1),t._v("及其使用方式。")]),t._v(" "),e("h2",{attrs:{id:"功能介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能介绍"}},[t._v("#")]),t._v(" 功能介绍")]),t._v(" "),e("p",[t._v("数据库是用于存储、管理和检索数据的系统。数据库按照数据模型分类一般分为关系型数据库和非关系型数据库，其中，目前使用较多的关系型数据库有MySQL、OpenGauss、PostgreSQL等，非关系型数据库则有MongoDB等。")]),t._v(" "),e("p",[t._v("在特定业务场景下，用户希望停止对个别或全部数据库的写入操作，仅允许读取数据，以保证数据库系统的数据完整性、一致性和安全性。比如，在多云多活架构系统中，某业务数据库写入仅允许操作中心节点，通过开启数据库禁写插件，使路由异常流量写入非中心节点数据库失败，避免发生数据冲突从而保证数据库数据的一致性。")]),t._v(" "),e("p",[t._v("本插件着手于以非侵入的方式解决微服务在运行过程中动态开启或关闭数据库禁写能力的问题。用户可以通过下发动态配置，指定微服务需要禁写的数据库，从而实现对特定数据库的禁止写入能力。")]),t._v(" "),e("h3",{attrs:{id:"快速开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" 快速开始")]),t._v(" "),e("p",[t._v("本插件的快速上手使用教程可参考"),e("a",{attrs:{href:"#%E6%93%8D%E4%BD%9C%E5%92%8C%E7%BB%93%E6%9E%9C%E9%AA%8C%E8%AF%81"}},[t._v("操作和结果验证")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"支持版本和限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持版本和限制"}},[t._v("#")]),t._v(" 支持版本和限制")]),t._v(" "),e("h3",{attrs:{id:"支持版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持版本"}},[t._v("#")]),t._v(" 支持版本")]),t._v(" "),e("p",[t._v("数据库禁写插件目前支持MySQL、MongoDB、PostgreSQL和OpenGauss数据库，具体支持的客户端版本如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("数据库客户端")]),t._v(" "),e("th",[t._v("版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mongodb-driver-sync")]),t._v(" "),e("td",[t._v("2.6.2-2.7.x, 3.0.x-3.3.x")])]),t._v(" "),e("tr",[e("td",[t._v("mariadb-java-client")]),t._v(" "),e("td",[t._v("3.7.x-3.11.x, 4.0.x-4.11.x")])]),t._v(" "),e("tr",[e("td",[t._v("opengauss-jdbc")]),t._v(" "),e("td",[t._v("3.0.x, 3.1.x")])]),t._v(" "),e("tr",[e("td",[t._v("postgresql")]),t._v(" "),e("td",[t._v("9.4.x, 42.0.x-42.7.x")])])])]),t._v(" "),e("h3",{attrs:{id:"使用说明及限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用说明及限制"}},[t._v("#")]),t._v(" 使用说明及限制")]),t._v(" "),e("p",[t._v("数据库禁写插件必须使用动态配置中心来下发配置，使用说明请参考"),e("a",{attrs:{href:"#%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE"}},[t._v("参数配置")]),t._v("章节。")]),t._v(" "),e("ul",[e("li",[t._v("关系型数据库支持禁写的写操作：数据插入、更新和删除，创建和删除表，创建和删除索引，修改表结构。支持禁止写的示例SQL语句如下表所示：")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("操作类型")]),t._v(" "),e("th",[t._v("示例SQL语句")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("创建表")]),t._v(" "),e("td",[t._v("CREATE TABLE table_demo (id INT)")])]),t._v(" "),e("tr",[e("td",[t._v("插入数据")]),t._v(" "),e("td",[t._v("INSERT INTO table_demo VALUES (1)")])]),t._v(" "),e("tr",[e("td",[t._v("更新数据")]),t._v(" "),e("td",[t._v("UPDATE table_demo SET id = 2 WHERE id = 1")])]),t._v(" "),e("tr",[e("td",[t._v("删除数据")]),t._v(" "),e("td",[t._v("DELETE FROM table_demo WHERE id = 1")])]),t._v(" "),e("tr",[e("td",[t._v("创建索引")]),t._v(" "),e("td",[t._v("CREATE INDEX idx_id ON table_demo (id)")])]),t._v(" "),e("tr",[e("td",[t._v("删除索引")]),t._v(" "),e("td",[t._v("DROP INDEX idx_id ON table_demo")])]),t._v(" "),e("tr",[e("td",[t._v("修改表结构")]),t._v(" "),e("td",[t._v("ALTER TABLE table_demo ADD COLUMN name VARCHAR(20)")])]),t._v(" "),e("tr",[e("td",[t._v("删除表")]),t._v(" "),e("td",[t._v("DROP TABLE table_demo")])])])]),t._v(" "),e("ul",[e("li",[t._v("MongoDB数据库支持禁写的写操作：文档插入、更新、替换和删除，创建和删除集合，创建和删除索引。支持禁止写的示例MongoDB命令如下表所示：")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("操作类型")]),t._v(" "),e("th",[t._v("示例MongoDB命令")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("创建集合")]),t._v(" "),e("td",[t._v('db.createCollection("collection_demo")')])]),t._v(" "),e("tr",[e("td",[t._v("插入文档")]),t._v(" "),e("td",[t._v('db.collection_demo.insertOne({"id": 1})')])]),t._v(" "),e("tr",[e("td",[t._v("更新文档")]),t._v(" "),e("td",[t._v('db.collection_demo.updateOne({ "id": 1 },{ $set: {"id": 2 } })')])]),t._v(" "),e("tr",[e("td",[t._v("替换文档")]),t._v(" "),e("td",[t._v('db.collection_demo.replaceOne({ "id": 1 },{"id": 2 })')])]),t._v(" "),e("tr",[e("td",[t._v("删除文档")]),t._v(" "),e("td",[t._v('db.collection_demo.deleteOne({ "id": 1})')])]),t._v(" "),e("tr",[e("td",[t._v("创建索引")]),t._v(" "),e("td",[t._v('db.collection_demo.createIndex({ "id":1 })')])]),t._v(" "),e("tr",[e("td",[t._v("删除索引")]),t._v(" "),e("td",[t._v('db.collection_demo.dropIndex("id_1")')])]),t._v(" "),e("tr",[e("td",[t._v("删除集合")]),t._v(" "),e("td",[t._v("db.collection_demo.drop()")])])])]),t._v(" "),e("p",[e("strong",[t._v("禁写实现方式：")]),t._v("\n对于被禁止写入的数据库，当执行以上写操作时，Sermant Agent会向宿主服务抛出"),e("code",[t._v("java.sql.SQLException")]),t._v("异常。")]),t._v(" "),e("h2",{attrs:{id:"参数配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数配置"}},[t._v("#")]),t._v(" 参数配置")]),t._v(" "),e("p",[t._v("数据库禁写插件必须使用动态配置中心来下发配置，配置发布可以参考"),e("a",{attrs:{href:"https://sermant.io/zh/document/user-guide/configuration-center.html#%E5%8F%91%E5%B8%83%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态配置中心使用手册"),e("OutboundLink")],1),t._v("。动态配置模型中的"),e("code",[t._v("group")]),t._v(", "),e("code",[t._v("key")]),t._v(", "),e("code",[t._v("content")]),t._v(" 分别对应如下：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("group")])]),t._v(" "),e("p",[t._v("group为"),e("strong",[t._v("app=${service.meta.application}&environment=${service.meta.environment}&zone=${service.meta.zone}")]),t._v("，")]),t._v(" "),e("p",[t._v("其中"),e("code",[t._v("${service.meta.application}")]),t._v("，"),e("code",[t._v("${service.meta.environment}")]),t._v("以及"),e("code",[t._v("${service.meta.zone}")]),t._v("在Sermant的配置文件"),e("code",[t._v("sermant-agent-x.x.x/agent/config.properties")]),t._v("中配置。group的默认值为"),e("code",[t._v("app=default&environment=&zone=default")]),t._v("。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("key")])]),t._v(" "),e("p",[t._v("key分为两类。")]),t._v(" "),e("p",[t._v("全局配置：key为固定值"),e("strong",[t._v("sermant.database.write.globalConfig")]),t._v("，其优先级大于局部配置。")]),t._v(" "),e("p",[t._v("局部配置：微服务的局部配置，key为"),e("strong",[t._v("sermant.database.write.${service.meta.service}")]),t._v("，其中"),e("code",[t._v("${service.meta.service}")]),t._v("在Sermant的配置文件"),e("code",[t._v("sermant-agent-x.x.x/agent/config.properties")]),t._v("中配置。")]),t._v(" "),e("p",[t._v("在同时配置的情况下，若全局配置禁写开关打开，则全局配置生效，否则局部配置生效。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("content")])]),t._v(" "),e("p",[t._v("content为具体的数据库禁写配置内容，遵循yaml的格式。")]),t._v(" "),e("p",[e("code",[t._v("enableMongoDbWriteProhibition")]),t._v("控制MongoDB禁写开关，"),e("code",[t._v("mongoDbDatabases")]),t._v("配置需要禁写的MongoDB数据库列表。")]),t._v(" "),e("p",[e("code",[t._v("enableMySqlWriteProhibition")]),t._v("控制MySQL禁写开关，"),e("code",[t._v("mySqlDatabases")]),t._v("配置需要禁写的MySQL数据库列表。")]),t._v(" "),e("p",[e("code",[t._v("enablePostgreSqlWriteProhibition")]),t._v("控制PostgreSQL禁写开关，"),e("code",[t._v("postgreSqlDatabases")]),t._v("配置需要禁写的PostgreSQL数据库列表。")]),t._v(" "),e("p",[e("code",[t._v("enableOpenGaussWriteProhibition")]),t._v("控制OpenGauss禁写开关，"),e("code",[t._v("openGaussDatabases")]),t._v("配置需要禁写的OpenGauss数据库列表。")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enableMongoDbWriteProhibition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongoDbDatabases")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mongodb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("database"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mongodb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("database"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enableMySqlWriteProhibition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mySqlDatabases")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("database"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enablePostgreSqlWriteProhibition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postgreSqlDatabases")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" postgresql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("database"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enableOpenGaussWriteProhibition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("openGaussDatabases")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" opengauss"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("database"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])])])]),t._v(" "),e("blockquote",[e("p",[t._v("注意：如果是新增或者更新配置，新配置将会在Sermant中直接全部覆盖刷新。如果是删除配置，那么Sermant中的数据库禁写开关将关闭，数据库列表置空。")])]),t._v(" "),e("h2",{attrs:{id:"操作和结果验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作和结果验证"}},[t._v("#")]),t._v(" 操作和结果验证")]),t._v(" "),e("p",[t._v("本节内容以操作MongoDB数据库的示例微服务来演示数据库禁写插件的能力。示例中通过在ZooKeeper中下发动态配置，指定禁写的数据库类型和名称，通过调用实例微服务接口创建和查询MongoDB集合来验证数据库禁写插件的能力。")]),t._v(" "),e("h3",{attrs:{id:"准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/sermant-io/Sermant/releases/download/v1.4.0/sermant-1.4.0.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载 "),e("OutboundLink")],1),t._v("Sermant Release包")])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://zookeeper.apache.org/releases.html#download",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v(" ZooKeeper Release包")])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v("MongoDB 安装包并安装")])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/sermant-io/Sermant-examples/releases/download/v1.4.0/sermant-examples-database-write-prohibition-demo-1.4.0.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v(" Demo二进制产物压缩包")])])]),t._v(" "),e("h3",{attrs:{id:"步骤一-获取demo二进制产物"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤一-获取demo二进制产物"}},[t._v("#")]),t._v(" 步骤一：获取Demo二进制产物")]),t._v(" "),e("p",[t._v("解压Demo二进制产物压缩包，即可得到"),e("code",[t._v("mongodb-demo.jar")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"步骤二-部署动态配置中心zookeeper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤二-部署动态配置中心zookeeper"}},[t._v("#")]),t._v(" 步骤二：部署动态配置中心ZooKeeper")]),t._v(" "),e("p",[t._v("解压ZooKeeper Release包，将"),e("code",[t._v("conf/zoo_sample.cfg")]),t._v("拷贝至"),e("code",[t._v("conf/zoo.cfg")]),t._v("后，通过执行以下脚本即可启动ZooKeeper:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" bin/zkServer.sh start\n")])])]),e("p",[t._v("ZooKeeper的使用说明可参阅"),e("a",{attrs:{href:"https://zookeeper.apache.org/doc/current/zookeeperStarted.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"步骤三-启动mongodb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤三-启动mongodb"}},[t._v("#")]),t._v(" 步骤三：启动MongoDB")]),t._v(" "),e("p",[t._v("安装MongoDB数据库后，通过执行以下脚本即可启动MongoDB:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start mongod\n")])])]),e("p",[t._v("MongoDB的安装可参阅"),e("a",{attrs:{href:"https://www.mongodb.com/docs/v4.2/installation/#mongodb-community-edition-installation-tutorials",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"步骤四-部署应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤四-部署应用"}},[t._v("#")]),t._v(" 步骤四：部署应用")]),t._v(" "),e("p",[t._v("执行以下命令挂载Sermant启动Demo应用:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),t._v("/sermant-agent-x.x.x/agent/sermant-agent.jar "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" mongodb.jar\n")])])]),e("blockquote",[e("p",[t._v("说明：此处${path}为sermant-agent包所在路径。")])]),t._v(" "),e("h3",{attrs:{id:"步骤五-创建mongodb集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤五-创建mongodb集合"}},[t._v("#")]),t._v(" 步骤五：创建MongoDB集合")]),t._v(" "),e("p",[t._v("执行以下命令调用Demo接口创建集合:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://127.0.0.1:30110/createCollection?databaseName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongodb-database-1"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("collectionName")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("collection-test-1\n")])])]),e("p",[t._v("输出结果如下所示：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Collection collection-test-1 successfully created\n")])])]),e("p",[t._v("执行以下命令调用Demo接口查询已经创建的集合:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://127.0.0.1:30110/queryCollection？databaseName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongodb-database-1\n")])])]),e("p",[t._v("输出结果如下所示：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Current Collection: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("collection-test-1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("输出如上所示结果，则说明集合创建成功。")]),t._v(" "),e("blockquote",[e("p",[t._v("说明：此处${path}为sermant-agent包所在路径。")])]),t._v(" "),e("h3",{attrs:{id:"步骤六-发布配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤六-发布配置"}},[t._v("#")]),t._v(" 步骤六：发布配置")]),t._v(" "),e("p",[t._v("配置MongoDB禁写规则，参考"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/configuration-center.html#发布配置"}},[t._v("动态配置中心使用手册")]),t._v("中Zookeeper进行配置发布。")],1),t._v(" "),e("p",[t._v("其中key值为"),e("strong",[t._v("sermant.database.write.globalConfig")]),t._v("，group为"),e("strong",[t._v("app=default&environment=&zone=default")]),t._v("，content为具体的禁止消费规则，如下所示：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enableMongoDbWriteProhibition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongoDbDatabases")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mongodb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("database"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),e("p",[t._v("其中，通过"),e("code",[t._v("enableMongoDbWriteProhibition")]),t._v("开启MongoDB数据库禁写能力，通过"),e("code",[t._v("mongoDbDatabases")]),t._v("配置指定禁写的数据库名称。")]),t._v(" "),e("p",[t._v("利用ZooKeeper提供的命令行工具发布以上配置：")]),t._v(" "),e("ol",[e("li",[t._v("在"),e("code",[t._v("${zookeeper-path}/bin/")]),t._v("目录执行以下命令创建配置模型的group节点"),e("code",[t._v("/app=default&environment=&zone=")]),t._v("：")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux")]),t._v("\n./zkCli.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("创建完成group节点后，在"),e("code",[t._v("${zookeeper-path}/bin/")]),t._v("目录执行以下命令创建配置模型的key节点"),e("code",[t._v("/sermant.database.write.globalConfig")]),t._v("，并设置节点的content：")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux")]),t._v("\n./zkCli.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /sermant.database.write.globalConfig "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enableMongoDbWriteProhibition: true\nmongoDbDatabases:\n  - mongodb-database-1"')]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("说明：${zookeeper-path}为ZooKeeper的安装目录。")])]),t._v(" "),e("h3",{attrs:{id:"结果验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结果验证"}},[t._v("#")]),t._v(" 结果验证")]),t._v(" "),e("h4",{attrs:{id:"禁写配置下发后创建集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#禁写配置下发后创建集合"}},[t._v("#")]),t._v(" 禁写配置下发后创建集合")]),t._v(" "),e("p",[t._v("执行以下命令调用Demo接口创建MongoDB集合:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://127.0.0.1:30110/createCollection?databaseName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongodb-database-1"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("collectionName")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("collection-test-2\n")])])]),e("p",[t._v("输出结果如下所示，MongoDB数据库禁写执行生效：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Collection collection-test-2 failed to be created\n")])])]),e("h4",{attrs:{id:"查询已创建的集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询已创建的集合"}},[t._v("#")]),t._v(" 查询已创建的集合")]),t._v(" "),e("p",[t._v("执行以下命令调用Demo接口查询已经创建的MongoDB集合:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://127.0.0.1:30110/queryCollection？databaseName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongodb-database-1\n")])])]),e("p",[t._v("输出结果如下所示，collection-test-2集合未被创建，MongoDB数据库禁写执行生效：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Current Collection: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("collection-test-1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);